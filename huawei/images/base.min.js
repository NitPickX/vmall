/**
 * Last Update:2012-12-20  zhu
 */
// 新增字符串解析方法
if (!String.prototype.transHtmlAttribute) {
    String.prototype.transHtmlAttribute = function () {
        var a = this;
        var tmp = document.createElement("textarea");
        tmp.innerHTML = a;
        a = tmp.value;
        return a;
    }
}



ec.pkg("ec.account");
ec.load("jquery.autocomplete", {
    loadType: "lazy",
    callback: function () {
        $("#search-kw").autocomplete({
            serviceUrl: "/search_keywords",
            minChars: 1,
            maxHeight: 400,
            deferRequestBy: 100 // miliseconds
        });
    }
});

ec.load("ec.box");
ec.load("ec.XSSUtils");

// 定义用户信息页面变量
ec.account.customerInfo = function () {
    this.zmPoint = null; // 默认芝麻分
    this.empiricalValue = null; // 经验值

};

var g_pointBlance = 0; // 积分
var g_couponCount = 0; // 优惠券数量
var g_balanceAmount = 0; // 代金券余额
var g_newMsgCount = 0; // 站内信数量
var g_totalPoint = 0; // 经验值

var minCartNum = 0;

window.gid = function (id) {
    return document.getElementById(id);
}

// 是否登录
ec.account.isLogin = function () {
    ec.account.id = ec.util.cookie.get("uid");
    ec.account.loginName = ec.util.cookie.get("ac_loNa");
    return ec.account.id && ec.account.loginName;
};

//同步UP信息，更新session
ec.account.syncCustomSession = function (callback) {
    new ec.ajax().get({
        async: false, //使用同步的Ajax请求
        url: "/account/syncEmailAndMobile.json",
        dataType: "json",
        timeout: 10000,
        successFunction: function (json) {
            if (callback && callback != undefined) {
                callback(json);
            }
            return;
        },
        timeoutFunction: function () {
            return;
        },
        errorFunction: function () {
            return;
        }
    });
};

// 调用account子模块获取用户登录信息
ec.account.getStatus = function (callback) {
    $.ajax({
        url: domainAccount + "/status.json?t=" +
            new Date().getTime(),
        dataType: "json",
        timeout: 10000,
        jsonop: "callback",
        type: "post",
        success: function (result) {
            if (result && result.id > 0) {
                ec.account.id = result.id;
                ec.account.uid = result.uid;
                ec.account.name = result.name;
                ec.account.nickName = result.nickName;
                ec.account.displayName = result.displayName;
                ec.account.loginName = result.loginName;
                ec.account.email = result.email;
                ec.account.mobile = result.mobile;
                ec.account.isQueue = result.isQueue;
                ec.account.custGrade = result.custGrade;
                ec.account.custPrivilege = result.custPrivilege;
                ec.account.custPoint = result.custPoint;
                ec.account.userState = result.userState;
                ec.account.isAuthCust = result.isAuthCust;


                // 判断用户是否首次登录，如果首次登录需要触发用户登录业务操作
                var isFirst = ec.util.cookie.get("ifl_v");
                if (isFirst == "1") {
                    $.ajax({
                        url: "/account/load",
                        type: "POST"
                    });
                }
            }
            callback();
        }
    });
};

// 通过account/status获得登录信息
ec.account.getAccountStatus = function (userId, callback, isLazy) {
    if (userId) {
        if (isLazy) {
            ec.load({
                url: domainMain + "/account/status?" + (new Date()).getTime(),
                type: "js",
                onload: callback
            });
        } else {
            ec.load({
                url: domainMain + "/account/status?" + (new Date()).getTime(),
                type: "js",
                loadType: "lazy",
                onload: callback
            });
        }
    }
};

// 登录信息取cookie的值
ec.account.getLoginInfo = function (callback, isLazy) {
    var loginInfo = ec.util.cookie.get("ac_li");
    var userId = ec.util.cookie.get("uid");
    var isValCas = ec.util.cookie.get("isValCas");

    try {
        if (userId && isValCas && "false" == isValCas) {
            ec.account.id = ec.util.cookie.get("uid");
            ec.account.uid = ec.util.cookie.get("uid");
            ec.account.name = ec.util.cookie.get("user");
            ec.account.nickName = ec.util.cookie.get("name");
            ec.account.displayName = ec.util.cookie.get("displayName");
            ec.account.loginName = ec.util.cookie.get("user");
            ec.account.isValCas = "false";

            // 判断用户是否首次登录，如果首次登录需要触发用户登录业务操作
            $.ajax({
                url: "/account/load?uid=" + userId,
                async: false,
                type: "POST"
            });
            ec.account.getAccountStatus(userId, callback, isLazy);
            // 重新取cookie，判断是否已进行CAS验证成功
            ec.account.isValCas = ec.util.cookie.get("isValCas");
            callback();
            return;
        }
        if (loginInfo && userId) {
            ec.account.id = ec.util.cookie.get("uid");
            ec.account.uid = ec.util.cookie.get("uid");
            ec.account.name = ec.util.cookie.get("user");
            ec.account.nickName = ec.util.cookie.get("name");
            ec.account.displayName = ec.util.cookie.get("displayName");
            ec.account.loginName = ec.util.cookie.get("ac_loNa");
            ec.account.email = ec.util.cookie.get("ac_lel");
            ec.account.mobile = ec.util.cookie.get("ac_lmi");
            ec.account.isQueue = ec.util.cookie.get("ac_liq");
            ec.account.custGrade = ec.util.cookie.get("ac_lgc");
            ec.account.custPrivilege = ec.util.cookie.get("ac_cp");
            ec.account.custPoint = ec.util.cookie.get("ac_ltp");
            ec.account.userState = ec.util.cookie.get("ac_lus");

            callback();
            return;
        }
    } catch (e) {
        // do nothing
    }

    ec.account.getAccountStatus(userId, callback, isLazy);
};

// 营销信息确认提交
ec.account.confirmSaleConfig = function () {
    // 是否勾选了确认按钮
    var flag = $("#checkSaleConfig").attr('checked') ? "1" : "0";
    // 提交定制结果
    new ec.ajax().get({
        url: "/saleinfo/setSaleInfoRcvCfg.json?send_msg=" + flag + "&t=" + new Date().getTime(),
        async: true, // 使用异步的Ajax请求
        timeout: 10000,
        successFunction: function (json) {
            if (!json.success) {
                return;
            }
            // 清除首次登录标记
            ec.util.cookie.set("isFirstLogin", "0", { domain: "vmall.com", path: "/" });
            ec.redirectTo(json.href);

        },
        timeoutFunction: function () {
            return;
        },
        errorFunction: function () {
            return;
        }
    });
}

// 展示定制弹出窗口
ec.account.displaySaleConfig = function () {
    if (!ec.account.isLogin()) {
        return false;
    }
    if (window.location.pathname !== "/" && window.location.pathname !== "/index.html") {
        return false;
    }

    // 是否首次登录
    var isFirstLogin = ec.util.cookie.get("isFirstLogin");
    // 首次登录则弹出窗口
    if (isFirstLogin && isFirstLogin == "1") {
        var html = '';
        html += '<div class="box-prompt-success-area">';
        html += '  <div class="h">';
        html += '    <img src="' + imagePath + '/echannel/sprites/sprites33.png" alt="">';
        html += '  </div>';
        html += '  <div class="b clearfix">';
        html += '    <input id="checkSaleConfig" type="checkbox" checked="checked">';
        html += '    <p>同意商城在我登录时收集并关联不同版本信息，并通过PUSH、短信、邮件、站内信等给我推送产品、服务、优惠活动等信息。<a href="https://sale.vmall.com/notification.html" target="_blank">查看详情</a></p>';
        html += '  </div>';
        html += '</div>';
        html += '<div class="box-button">';
        html += '  <a onclick="ec.account.confirmSaleConfig()" class="box-cancel"><span>确定</span></a>';
        html += '</div>';
        var box = new ec.box(html, {
            boxid: "ec_sale_config",
            boxclass: "ol_box_4",
            title: '欢迎来到华为商城',
            remember: false,
            showButton: false
        });
        box.open();
    }
}

//获取芝麻信用信息
ec.account.getZMInfo = function () {
    $.ajax({
        url: domainUc + '/zm/queryZM.json',
        dataType: 'jsonp',
        timeout: 10000,
        timeoutFunction: function () {
            alert(timeOutInfo);
        },
        success: function (json) {
            if (json.resultCode == '200' && json.userZMInfoVO) {
                if (json.userZMInfoVO.certifyStatus == 1) {
                    $('#zhimaPoint').html(json.userZMInfoVO.creditScore);
                    ec.account.customerInfo.zmPoint = json.userZMInfoVO.creditScore;
                }
            }
        }
    });
};

ec.account.showEnterpriseUserNav = function () {
    // 优先取Cookie中的企业用户标记
    var isEnterpriseUser = ec.util.cookie.get("isEnterpriseUser");
    if (isEnterpriseUser && 'false' !== isEnterpriseUser) {
        $("#preferential").html('<a href="' + domainMain + '/member/enterprise" rel="nofollow">优惠内购</a>').show();
        $("#li-enterprise-preferential").html('<a href="' + domainMain + '/member/enterprise" onclick="pushHeaderMsg(\'优惠内购\',\'' + domainMain + '/member/enterprise\')"><span>优惠内购</span></a>').show();
        $("#li-enterprise").html('<a href="' + domainMain + '/member/enterprise"><span>优惠内购</span></a>').show();
    }
}

// 获取用户账户基本信息
ec.account.getAccountInfo = function (callback) {
    ec.account.showEnterpriseUserNav();
    $.ajax({
        url: domainMain + "/member/accountInfo.json",
        dataType: "json",
        timeout: 10000,
        timeoutFunction: function () {
            alert(timeOutInfo);
        },
        success: function (json) {

            // [双十一加固]主站totalInfo业务逻辑合并到accountInfo接口
            // 优惠内购资格
            // ec.util.cookie.set("userCenterFlag",false)
            // ec.util.cookie.set("enterpriseUserCookie",json.enterpriseUser);
            if (json && json.enterpriseUser) {
                ec.util.cookie.set('isEnterpriseUser', 'true', { domain: 'vmall.com' });
                ec.account.showEnterpriseUserNav();
            }


            if (json && !json.success && json.code == 'login') {
                var e = {
                    domain: "vmall.com"
                };
                //清除缓存
                ec.account.id = ec.util.cookie.set("uid", null, e);
                ec.account.loginName = ec.util.cookie.set("user", null, e);
                // top未登录
                $("#unlogin_status").show();
                $("#top_login").removeClass().addClass("header-toolbar hide");
                $("#top_unlogin").removeClass().addClass("header-toolbar");

                // 宫格未登录
                $("#gg_login").removeClass().addClass("i-mall-prompt clearfix hide");
                $("#gg_unlogin").removeClass().addClass("i-mall-prompt clearfix");

                //特权未登录
                $("#privilege_is_login").removeClass().addClass("privilege-user privilege-user-gray");
                $(".privilege-user-login").show();
                $("#personal_privilege").hide();
                //经验条清空
                $(".user-canvas").removeClass().addClass("user-canvas hide");
                $(".user-canvas").removeAttr("style");
                $("#privilege-user-img").find("img").attr('src', 'images/echannel/misc/img_not_logged_in.png');
                //积分、优惠券、代金券、
                $("#balanceicon_privilege").html("--");
                $("#couponicon_privilege").html("--");
                $("#balanceAmount_privilege").html("--");
                //购物车归零
                ec.minicart.setNum(0);

                //企业购登录
                $(".business-user-info").hide();
                $(".business-user-bottom").find(".business-user-num").hide();
                $(".business-user").addClass("business-user-gray");
                $("#userImgID").find("img").attr('src', '/images/echannel/misc/img88_black.jpg');
                $("#loginUserInfoId").show();
                $(".business-user-bottom").find(".business-user-explain").show();

                return;
            }
            callback(json);
            getPointBalance(); // 获取积分
            ec.account.getBalanceAmount(); // 获取代金券余额
            getPetalNumber() //获取花瓣
        }
    });
};

//新增queryEnterpriseFlag.json 单独查询内购标志 存进cookie
ec.account.queryEnterpriseFlag = function () {
    var enterpriseUserCookie = ec.util.cookie.get("enterpriseUserCookie");
    if (null == enterpriseUserCookie || enterpriseUserCookie == "") {
        $.ajax({
            url: domainMain + "/member/queryEnterpriseFlag.json",
            dataType: "json",
            timeout: 10000,
            timeoutFunction: function () {
                alert(timeOutInfo);
            },
            success: function (json) {
                if (json.enterpriseUser) { //内购标识  显示所有内购入口
                    $("#preferential").html('<a href="' + domainMain + '/member/enterprise" rel="nofollow">优惠内购</a>').show();
                    $("#li-enterprise-preferential").html('<a href="' + domainMain + '/member/enterprise"><span>优惠内购</span></a>').show();
                    $("#li-enterprise").html('<a href="' + domainMain + '/member/enterprise"><span>优惠内购</span></a>').show();
                } else { //不是内购用户 或者 未登录的情况下 去掉 内购入口
                    $("#preferential").html('');
                    $("#li-enterprise-preferential").html('');
                    $("#li-enterprise").html('');
                }
            },
            error: function () {
                $("#preferential").html('');
                $("#li-enterprise-preferential").html('');
                $("#li-enterprise").html('');
            }
        })
    } else {
        if ("true" == enterpriseUserCookie) {
            $("#preferential").html('<a href="' + domainMain + '/member/enterprise" rel="nofollow">优惠内购</a>').show();
            $("#li-enterprise-preferential").html('<a href="' + domainMain + '/member/enterprise"><span>优惠内购</span></a>').show();
            $("#li-enterprise").html('<a href="' + domainMain + '/member/enterprise"><span>优惠内购</span></a>').show();
        }
        if ("false" == enterpriseUserCookie) {
            $("#preferential").html('');
            $("#li-enterprise-preferential").html('');
            $("#li-enterprise").html('');
        }
    }
};

// 显示用户账户信息
ec.account.showCustoemrInfo = function (json) {
    ec.util.cookie.set("vmallMyCenterMsg", json.newMsgCount)
    // 用户优惠券数量
    if (parseInt(json.couponCount) >= 0) {
        g_couponCount = json.couponCount;
        $('#top-couponCount').html(json.couponCount);
    }
    // 用户新消息数量
    if (json.newMsgCount) {
        g_newMsgCount = json.newMsgCount;
        $('#top-newMsgCount').html(json.newMsgCount || 0);
        //我的商城左边导航
        if (json.newMsgCount > 0) {
            $("#li-msg em").text(json.newMsgCount);
        }
    }
    // 展示用户信息
    if (json.customerInfo) {
        var customerInfo = json.customerInfo;

        if (customerInfo.headPictureURL) {
            $('#customerPic').attr('src', customerInfo.headPictureURL.transHtmlAttribute());
            $('#gg_customerPic').attr('src', customerInfo.headPictureURL.transHtmlAttribute());
        } else { //已登录情况下，没设置头像，使用已登录的默认用户头像 add by wwx464873 date:2017-07-11
            var imgpath = $('#customerPic').attr('imgpath');
            $('#customerPic').attr('src', imgpath + '/echannel/misc/img_logged_in.png');
            $('#gg_customerPic').attr('src', imgpath + '/echannel/misc/img_logged_in.png');
        }

        if (customerInfo.totalPoint) {
            $('#empiricalValue').html(customerInfo.totalPoint);
            // 经验值页面对象缓存起来
            ec.account.customerInfo.empiricalValue = customerInfo.totalPoint;
            g_totalPoint = customerInfo.totalPoint;

        }
        if (customerInfo.mobileStatus && (customerInfo.mobileStatus == "1")) {
            $('#validateMobile').html("已验证手机").removeClass("link-non-validated").addClass("link-validated");
        }
        if (customerInfo.emailStatus && (customerInfo.emailStatus == "1")) {
            $('#validateMail').html("已验证邮箱").removeClass("link-non-validated").addClass("link-validated");
        }
        if (customerInfo.isAuthentication && (customerInfo.isAuthentication == "1")) {
            $('#authentication_y').show();
            $('#authentication_n').hide();
        } else {
            $('#authentication_n').show();
            $('#authentication_y').hide();
        }
    }

    // 显示经验值进度条
    if (json.gradeConfig) {
        //更高一级别经验值门槛(经验值上限)
        var max = json.gradeConfig.maxScores;
        //本级别经验值门槛(经验值下限)
        var min = json.gradeConfig.minScores;
        var interval = max - min;

        //用户经验值
        var userScores = g_totalPoint;

        var cha = userScores - min;
        if (isNaN(interval)) {
            interval = 50000;
        }
        if (cha > 50000) {
            cha = 50000;
        }

        var resultNum = (cha / interval) * 100;

        if (isNaN(resultNum)) {
            resultNum = 0;
            userScores = 0;
        }
        if (resultNum <= 0) {
            resultNum = 0;
        } else {
            resultNum = Math.round(resultNum);
        }

        var code = json.gradeConfig.code;

        $('#gg_jyz').attr("style", "width: " + resultNum + "%");
        //首页经验值进度条修改
        $('#canvas-index').attr("style", "width: " + resultNum + "%");

        var nextGradeName = json.gradeConfig.nextGradeName;
        if (nextGradeName == 'maxlevel') {
            max = 100000;
        }

        // 积分和积分级别对应关系
        // V0------V1------V2------V3------V4------V5
        // 00-----100-----1000----5000----20000---50000+
        (function () {
            ec.account.privilege_updateProgress(max, min, userScores, code);
            ec.account.privilege_updateProgressIndex(code);
        })();
    }

};

/**
 * @description 特殊字符转义
 * @param str
 *            目标字符串
 * @return 转义后的字符串
 * @demo htmlEncode('id=1 & age<25') ==> "id=1&nbsp;&amp;&nbsp;age&lt;25"
 */
function htmlEncode(string) {
    var entityMap = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': '&quot;',
        "'": '&#39;',
        "/": '&#x2F;'
    };
    return String(string).replace(/[&<>"'\/]/g, function (s) {
        return entityMap[s];
    });
}
/**
 * 获取花瓣数量
 */
function getPetalNumber() {
    //异步请求 花瓣数量和花瓣余额
    new ec.ajax().get({
        url: "/member/petalValid.json",
        timeout: 10000,
        timeoutFunction: function () {
            alert(timeOutInfo);
        },
        successFunction: function (json) {
            if (!json.success) {
                $('#petalicon_myCenter').html(0);
            } else {
                $('#petalicon_myCenter').html('<a href="/member/petal?t=' + new Date().getTime() + '" target="_blank">' + json.petalNumber + '</a>');
            }
        }
    });
}

/**
 * 获取代金券余额
 */
ec.account.getBalanceAmount = function () {
    var g_balanceAmount;
    var data = {
        portal: 1,
        lang: 'zh-CN',
        country: 'CN'
    };

    utils.ajaxOpenAPI({
        type: 'POST',
        url: '/mcp/pay/queryBalanceAmount',
        data: data,
        success: function (json) {
            if (json.success) {
                if (json.balanceAmount != null) {
                    // 全局赋值
                    g_balanceAmount = (parseFloat(json.balanceAmount))
                        .toFixed(2);
                } else {
                    g_balanceAmount = 0;
                }
                $('#balanceAmount').html(g_balanceAmount);
                //给特权页代金券赋值
                if (parseInt(g_balanceAmount) > parseInt(999)) {
                    $("#balanceAmount_privilege").empty().html('<a href="/member/balance?t=' + new Date().getTime() + '" target="_blank">' + 999 + '+</a>');
                } else {
                    $("#balanceAmount_privilege").empty().html('<a href="/member/balance?t=' + new Date().getTime() + '" target="_blank">' + g_balanceAmount + '</a>');
                }
                //我的商城代金券赋值
                $('#balanceAmount_myCenter').html('<a href="/member/balance?t=' + new Date().getTime() + '" target="_blank">' + g_balanceAmount + '</a>');
                $("#balanceAmount_myCenter").removeClass("p-price-no");
            }
        }
    });
};

ec.ready(function () {
    // 显示登录信息
    var _showLoginTips = function () {
        // setTimeout(function () {
        if (ec.account.isLogin()) {

            // 已登录
            // var loginName = ec.autoEncodeAttr(ec.account.displayName) || ec.autoEncodeAttr(ec.account.nickName) || ec.autoEncodeAttr(ec.account.name) || ec.account.loginName;
            var loginName = (ec.account.displayName || '').transHtmlAttribute() || (ec.account.nickName || '').transHtmlAttribute() || (ec.account.loginName || '').transHtmlAttribute() || ec.account.name;
            // 当登录名的长度大于10个字符的时候，用...来取代
            // if(loginName.length > 10){
            // loginName = loginName.substring(0,10)+"...";
            // }
            $("#customer_name").html(loginName);

            if ($('#cart_unlogin_info')[0]) {
                $('#cart_unlogin_info p').html('<a href="/member?t=' + new Date().getTime() + '">' + loginName + '</a>');
            }
            $("#login_status,#cart_login_info").show();
            $("#up_user_center").show();
            $("#unlogin_status,#cust_login_info").hide();

            $("#loginName").html('<a href="/member?t=' + new Date().getTime() + '">' + loginName + '</a>');
            $("#up_loginName").html(loginName);
            $("#up_loginName_info").html(loginName);
            // vip信息显示
            ec.account.showVipInfo();

            // top登录处理
            $("#top_login").removeClass().addClass("header-toolbar");
            $("#top_loginName").html(loginName);

            $("#top_unlogin").removeClass().addClass("header-toolbar hide");

            // 宫格登录处理
            $("#gg_loginName").html(loginName);
            $("#gg_login").removeClass().addClass("i-mall-prompt clearfix");
            $("#gg_unlogin").removeClass().addClass("i-mall-prompt clearfix hide");

            // 是否实名认证处理
            var isAuthCust = ec.util.cookie.get("isAuthCust");
            if ("true" == isAuthCust) {
                $("#authentication_y").show();
                $("#authentication_n").hide();
            } else {
                $("#authentication_n").show();
                $("#authentication_y").hide();
            }

            // 彩贝登录处理
            var caibeiShowMsg = ec.util.cookie.get("caibeiShowMsg"),
                caibeiHeadShow = ec.util.cookie.get("caibeiHeadShow"),
                caibeiJifenUrl = ec.util.cookie.get("caibeiJifenUrl");
            if (caibeiShowMsg != undefined && caibeiShowMsg != null && caibeiShowMsg.length > 0) {
                $("#HeadShow").html(caibeiHeadShow);

                if (caibeiJifenUrl != undefined && caibeiJifenUrl != null && caibeiJifenUrl.length > 0) {
                    caibeiShowMsg = caibeiShowMsg + "<b>|</b><a href='" + caibeiJifenUrl + "' title='我的彩贝积分' target='_blank'>我的彩贝积分</a>"
                }

                $("#ShowMsg").html(caibeiShowMsg);
                $("#caibeiMsg").show();
            }

            $("#newPointlogin_status").show();
            //                ec.account.queryEnterpriseFlag();//查询是否有 优惠内购 权限  顶部优惠内购菜单
            // 获取积分信息
            enterpriseUserCookieTemp = ec.util.cookie.get("isEnterpriseUser");
            if ("true" == enterpriseUserCookieTemp) {
                $("#preferential").html('<a href="' + domainMain + '/member/enterprise" rel="nofollow">优惠内购</a>').show();
                $("#li-enterprise-preferential").html('<a href="' + domainMain + '/member/enterprise" onclick = "pushHeaderMsg(\'优惠内购\',\'' + domainMain + '/member/enterprise\')"><span>优惠内购</span></a>').show();
                $("#li-enterprise").html('<a href="' + domainMain + '/member/enterprise"><span>优惠内购</span></a>').show();
            }
            userCenterFlagTemp = ec.util.cookie.get("userCenterFlag");
            if (userCenterFlagTemp != null && userCenterFlagTemp != "") {
                if (userCenterFlagTemp.length == 4) { //true 代表点击过账号中心按钮  此处用 true 判断无效
                    if (enterpriseUserCookieTemp.length > 4) {
                        ec.account.getAccountInfo(ec.account.showCustoemrInfo);
                    }
                }
            }

            if (window.location.pathname && (window.location.pathname == "/visitor/vistorConfirm")) {
                ec.redirectTo(domainMain);
            }
            // 当前页面是否为首页
            if (window.location.pathname && (window.location.pathname == "/" || window.location.pathname == "/index.html")) {
                ec.account.showEnterpriseUserNav();
            }
        } else {
            // 宫格未登录
            $("#gg_login").removeClass().addClass("i-mall-prompt clearfix hide");
            $("#gg_unlogin").removeClass().addClass("i-mall-prompt clearfix");

            // top未登录
            $("#top_login").removeClass().addClass("header-toolbar hide");
            $("#top_unlogin").removeClass().addClass("header-toolbar");
        }
        // }, 200);
    };


    var _upLogin = function (callback, visitorInfoTemp) {
        var visitorName = "";
        var funName = "callback" + new Date().getTime(),
            boxWidth;
        boxWidth = 500;
        if (ec.product.isSupportVisitorMode != undefined) {
            var visitorFlag = false;
            var skuInfo = ec.product.getSkuInfo(ec.product.getSku() || ec.product.defaultSku);
            var skuId = skuInfo.id;
            var sbomCode = skuInfo.code;
            if (ec.product.productSupportList != undefined && ec.product.productSupportList != null) {
                for (var n = 0; n < ec.product.productSupportList.length; n++) {
                    var visitorInfo = ec.product.productSupportList[n];
                    if (visitorInfo.sbomCode == sbomCode) {
                        var nowTime = ec.product.getSysDate();
                        var startTime = visitorInfo.startTime;
                        var endTime = visitorInfo.endTime;
                        if (startTime <= nowTime && endTime >= nowTime) {
                            visitorFlag = true;
                        }
                    }
                }
            }
            if (ec.product.inventory.haveInventory(skuId) && visitorFlag && ec.product.isSupportVisitorMode == 1 && ec.product.productType != 4 && !rush.sbom.isRushProduct() && !rush.sbom.isRushSbom(skuId)) {
                if (ec.product.isGift != 2 && (!ec.product.isCover || ec.product.isCover == undefined) && !ec.product.isComb) {
                    if (visitorInfoTemp == "visitorInfo") {
                        visitorName = '<div class="visitor-login"><a href="javascript:;" onclick="ec.product.orderNowByVisitor();" class="visitor-login-btn">免登录购买</a><div class="visitor-login-explain">' +
                            '<span>温馨提示：</span>免登录购买是华为商城（www.vmall.com）推出的快捷购买方式，暂不支持领取和使用优惠券，不支持累计积分或经验值等。推荐<a href="' + ec.product.casRegister + '">注册</a>成为华为商城会员，获得相关购买权益和服务。' +
                            '</div></div>';
                        boxWidth = 1000;
                    }
                }
            }
        }
        //var thirdLoginFlag = ec.util.cookie.get("thirdLoginFlag");
        //var url = '/account/login?type=frame&thirdLoginFlag='+thirdLoginFlag+'&url='+encodeURIComponent(domainMain +"/account/upCallback.html?funName="+funName+"&prePage="+encodeURIComponent(encodeURIComponent(window.location.href))),
        var url = '/account/login?type=frame&url=' + encodeURIComponent(domainMain + "/account/upCallback.html?funName=" + funName + "&prePage=" + encodeURIComponent(encodeURIComponent(window.location.href))),
            name = "up-iframe-" + (new Date()).getTime(),
            html = '<div id="visitorRedirect" class="clearfix">' +
                '<iframe id="iframeLogin" class="boxIframe fl" width="497" height="550" frameborder="0" name="' +
                name +
                '" src="about:blank" scrolling="no"></iframe>' +
                '</div>' +
                '<div class="login-link">继续访问即代表您已同意<a href="https://www.vmall.com/help/faq-778.html" target="_blank">华为商城服务协议</a>和<a href="https://www.vmall.com/help/faq-2635.html" target="_blank">华为隐私政策</a></div>';
        var box = new ec.box(html, {
            boxid: "ec_login",
            title: " ",
            remember: false,
            width: boxWidth,
            height: 600,
            showButton: false,
            onclose: function (box) {
                try {
                    delete window[funName];
                } catch (e) {
                    window[funName] = null;
                }


                box.find("iframe").each(function () {
                    this.contentWindow.close(); // 避免iframe内存泄漏
                    jQuery(this).remove(); // 删除iframe
                });
            },
            onopen: function () {
                ec.redirectTo({ url: url, win: window[name] });
                $("#iframeLogin").load(function () {
                    try {
                        if (window[name] && window[name].document.querySelectorAll('div.event-503-wrp').length > 0) {
                            ec.redirectTo({ url: '/account/login-error.html', win: window[name] });
                        }
                    } catch (e) { }
                    if ($(".visitor-login").length == 0) {
                        $("#visitorRedirect").append(visitorName)
                    }
                });
            }
        }).open();

        window[funName] = function () {
            if (typeof isUseAccount != "undefined" && isUseAccount == "true") {
                ec.account.getStatus(_showLoginTips);
            } else {
                // 重新加载状态
                /*
                 * ec.load({ url : domainMain + "/account/status?"+(new
                 * Date()).getTime(), type : "js", onload : _showLoginTips });
                 */
                ec.account.getLoginInfo(_showLoginTips, false);
                if (window.location.pathname == "/company") {
                    ec.redirectTo("/company");
                }
                ec.util.cookie.get("ifl_v");
            }

            callback();
            var e = {
                domain: "vmall.com"
            };
            ec.util.cookie.set("thirdLoginFlag", null, e);
            box.close();
            ec.account.displaySaleConfig();
        };

    };

    // 异步登录后自动回调
    ec.account.afterLogin = function (callback, visitorInfoTemp) {
        if (ec.account.isLogin()) {
            ec.account.getLoginInfo(_showLoginTips, false);
            callback();
        } else {
            $.ajax({
                url: "/account/check/loginInfo.json?" + Math.random(),
                dataType: "json",
                success: function (json) {
                    //1代表登录
                    if (json.loginFlag == "1") {
                        ec.account.getLoginInfo(_showLoginTips, false);
                        return;
                    } else {
                        //未登录
                        _upLogin(callback, visitorInfoTemp);
                    }
                },
                error: function (x) {
                    alert('系统繁忙，请稍后重试');
                }
            });
        }
    };

    // 兼容灰色account子模块上线，通过两个配置是否相等来判断是否用新的逻辑处理
    if (typeof isUseAccount != "undefined" && isUseAccount == "true") {
        ec.account.getStatus(_showLoginTips);
    } else {
        /*
         * ec.load({ url : domainMain + "/account/status?"+(new
         * Date()).getTime(), type : "js", loadType:"lazy", onload :
         * _showLoginTips });
         */
        ec.account.getLoginInfo(_showLoginTips, true);

    }

    // _showLoginTips();
    // ec.ready(function(){
    // [双十一加固]主站totalInfo业务逻辑合并到accountInfo接口
    // ec.base.getTotal();

    // [双十一加固]主站若游客购物车商品数量为0则不调用合并接口
    var cartId = ec.util.cookie.get("cartId");
    var cartAdded = ec.util.cookie.get("cartAdded");
    if (cartAdded && cartAdded != cartId) {
        ec.util.cookie.set("cartAdded", null);
    }

    $("#login_status").hover(function () {
        // 获取芝麻信用
        //            if(ec.account.customerInfo.zmPoint == null){
        //                ec.account.getZMInfo();
        //            }
        ec.account.getAccountInfo(ec.account.showCustoemrInfo);

        //获取代金券余额
        //            ec.account.getBalanceAmount();
        //
        //            // 获取积分信息
        //            getPointBalance() ;

    }, function () { });
});

ec.account.showVipInfo = function () {
    // 1为激活， 0为未激活
    if (ec.account.userState && ec.account.userState == "1") {
        $("#vip-inActive").hide();
        $("#vip-Active i").removeClass().addClass("icon-vip-level-" + ec.account.custGrade);
        $("#vip-Active").attr("title", "VMALL V" + ec.account.custGrade + "会员");
        $("#vip-Active").show();
        var html = [];
        html.push('<em class="vip-state" id="vip-info">&nbsp;&nbsp;&nbsp;&nbsp;');
        html.push('<a href="/member/point" title="VMALL V' + ec.account.custGrade + '会员" id="vip-Active" ><i class="icon-vip-level-' + ec.account.custGrade + '"></i></a>');
        html.push('</em>');
        $("#cart_unlogin_info p").append(html.join(''));

        // 新版首页头部及宫格等级
        $("#vip-Active-top i").removeClass().addClass("icon-vip-level-" + ec.account.custGrade);
        $("#vip-Active-top").attr("title", "VMALL V" + ec.account.custGrade + "会员");

        $("#vip-Active-gg").removeClass().addClass("icon-vip-level-" + ec.account.custGrade);
        if (ec.account.custGrade == '0') {
            $("#oldPeople").hide();
            $("#newPeople").show();
        } else {
            $("#oldPeople").show();
            $("#newPeople").hide();
        }

    } else if (ec.account.isValCas && "false" == ec.account.isValCas) {
        // 如果未验证CAS，不显示任何会员等级消息
        $("#vip-inActive").hide();
        $("#vip-Active").hide();

        // 新版首页头部及宫格等级
        $("#vip-Active-top").removeClass().addClass("icon-vip-level-0");
        $("#vip-Active-gg").removeClass().addClass("icon-vip-level-0");
        $("#oldPeople").hide();
        $("#newPeople").show();
    } else {
        $("#cart_unlogin_info p").append('&nbsp;&nbsp;<em class="vip-state"><a class="link-noAct" href="/member/account" id="vip-inActive" title="请完善个人信息，即刻享受会员特权">去激活</a></em>');
        $("#vip-inActive").show();
        $("#vip-Active").hide();

        // 新版首页头部及宫格等级
        $("#vip-Active-top").removeClass().addClass("icon-vip-level-0");
        $("#vip-Active-gg").removeClass().addClass("icon-vip-level-0");
        $("#oldPeople").hide();
        $("#newPeople").show();
    }
};

// 微型购物车
ec.pkg('ec.minicart');
ec.minicart.processCheck = function (cartInfo) {
    // 0 限购 1等于限购值2 不限购
    var itemList = cartInfo.itemInfos;
    for (var i = 0; i < itemList.length; i++) {
        var item = itemList[i];
        if (item.itemType == "P") {
            if (item.selected == "1") {
                itemList[i].checked = true;
            } else {
                itemList[i].checked = false;
            }
        } else {
            if (item.selected == "1") {
                itemList[i].checked = true;
            } else {
                itemList[i].checked = false;
            }
        }
    }

};

//套餐是否展示
ec.minicart.bundls = function (cartInfo) {

    var itemList = cartInfo.itemInfos;
    for (var i = 0; i < itemList.length; i++) {
        var item = itemList[i];
        //兼容仍有老类型的套餐

        if (item.itemType == "B" || item.itemType == "P") {

            for (var j = 0; j < item.subItems.length; j++) {

                if (item.subItems[j].itemType == "B" || item.subItems[j].itemType == "P") {
                    if (item.subItems[j].invalidCauseReason != 0) {
                        if (item.subItems[j].invalidCauseReason == 7) {
                            if (item.subItems[j].qty > item.subItems[j].invalidCauseLeftValue) {
                                itemList[i].show = "false";
                                itemList[i].showP = "false";
                            } else {

                            }
                        } else {
                            itemList[i].show = "false";
                            itemList[i].showP = "false";

                        }
                        if (item.subItems[j].invalidCauseReason != 7 && item.subItems[j].invalidCauseReason != 8) {
                            itemList[i].notbuyLimit = "true";
                        }

                    }
                }
            }
        }
        if (item.invalidCauseReason != 0) {
            if (item.invalidCauseReason == 7) {
                if (item.qty > item.invalidCauseLeftValue) {
                    itemList[i].show = "false";
                } else { }
            } else {
                itemList[i].show = "false";
            }
        }
        if ((item.lost) || (item.numblimit)) {
            itemList[i].show = "false";
        }
        if ((item.lost)) {
            if (item.itemType == "P") {
                itemList[i].showP = "false";
            }
        }

    }

};



ec.minicart.limitnumber = function (item) {
    var limit = item.invalidCauseLeftValue;
    if (limit < 0) limit = 1;
    if (limit == 0) {
        if (item.sbom.productLimit != 0 && item.sbom.sbomLimit != 0) {
            return Math.min(item.sbom.productLimit, item.sbom.sbomLimit);
        } else if (item.sbom.productLimit != 0) {
            return item.sbom.productLimit;
        } else if (item.sbom.sbomLimit != 0) {
            return item.sbom.sbomLimit;
        } else {
            return 999;
        }
    }

    return limit;
};

//套餐判断限购，置灰，不可结算

ec.minicart.bundleNoBuy = function (cartInfo) {

    var itemList = cartInfo.itemInfos;
    for (var i = 0; i < itemList.length; i++) {
        if (itemList[i].itemType != "B")

            var qty = itemList[i].qty;
        var qtylimit = [];
        var qtylose = [];
        var qtyJ = [];
        for (var j = 0; j < itemList.length; j++) {
            if (itemList[j].itemId != itemList[i].itemId) {
                if (itemList[j].itemCode == itemList[i].itemCode) {
                    qty += itemList[j].qty;
                    qtylimit.push(j);

                } else {
                    if (itemList[j].subItems.length > 0) {
                        for (var k = 0; k < itemList[j].subItems.length; k++) {
                            if (itemList[j].subItems[k].itemType == "P" && (itemList[j].subItems[k].itemCode == itemList[i].itemCode)) {
                                qty += itemList[j].subItems[k].qty;
                                qtylose.push(j);
                            }
                            if (itemList[j].subItems[k].itemType == "J" && (itemList[j].subItems[k].itemCode == itemList[i].itemCode)) {
                                qty += itemList[j].subItems[k].qty;
                                qtyJ.push({ home: j, sub: k });
                            }
                        };


                    }
                }

            }
        }
        if (itemList[i].itemType != "B") {
            var homelimit = ec.minicart.limitnumber(itemList[i]);
            if (qty > homelimit) {
                itemList[i].numblimit = true;
                if (qtylimit.length > 0) {
                    for (var l = 0; l < qtylimit.length; l++) {
                        itemList[qtylimit[l]].numblimit = true;
                    };
                }
                if (qtylose.length > 0) {
                    for (var m = 0; m < qtylose.length; m++) {
                        itemList[qtylose[m]].lost = true;
                    };
                }
                if (qtyJ.length > 0) {
                    for (var n = 0; n < qtyJ.length; n++) {
                        itemList[qtyJ[n].home].subItems[qtyJ[n].sub].Jlost = true;
                    };


                }
            }
        }
        //套餐时 子套餐去判断
        if (itemList[i].subItems.length > 0) {
            for (var o = 0; o < itemList[i].subItems.length; o++) {




                if (itemList[i].subItems[o].itemType == "P" || itemList[i].subItems[o].itemType == "B") {

                    var bundlelimit = ec.minicart.limitnumber(itemList[i].subItems[o]);
                    var bqty = itemList[i].qty;
                    var bqtylimit = [];
                    var bqtylose = [];
                    var bqtyJ = [];
                    for (var p = 0; p < itemList.length; p++) {

                        if ((itemList[i].itemId != itemList[p].itemId)) {
                            if ((itemList[p].itemCode) == itemList[i].subItems[o].itemCode) {
                                bqty += itemList[p].qty;
                                bqtylimit.push(p);
                            } else {
                                if (itemList[p].subItems.length > 0) {
                                    for (var q = 0; q < itemList[p].subItems.length; q++) {
                                        if (itemList[p].subItems[q].itemType == "P" && (itemList[p].subItems[q].itemCode == itemList[i].subItems[o].itemCode)) {
                                            bqty += itemList[p].subItems[q].qty;
                                            bqtylose.push(p);
                                        }

                                        if (itemList[p].subItems[q].itemType == "J" && (itemList[p].subItems[q].itemCode == itemList[i].subItems[o].itemCode)) {
                                            bqty += itemList[p].subItems[q].qty;
                                            bqtyJ.push({ home: p, sub: q });
                                        }
                                    };
                                }
                            }
                        }
                    }
                    if (bqty > bundlelimit) {
                        itemList[i].numblimit = true;
                        itemList[i].lost = true;
                        if (bqtylimit.length > 0) {
                            for (var r = 0; r < bqtylimit.length; r++) {
                                itemList[bqtylimit[r]].numblimit = true;
                            };
                        }
                        if (bqtylose.length > 0) {
                            for (var s = 0; s < bqtylose.length; s++) {
                                itemList[bqtylose[s]].lost = true;
                            };
                        }
                        if (bqtyJ.length > 0) {
                            for (var t = 0; t < bqtyJ.length; t++) {
                                itemList[bqtyJ[t].home].subItems[bqtyJ[t].sub].Jlost = true;
                            };
                        }
                    }
                };
            }
        }
        //子套餐
    }
};


ec.minicart.photos = function (cartInfo) {

    var itemList = cartInfo.itemInfos;
    for (var i = 0; i < itemList.length; i++) {
        var item = itemList[i];
        itemList[i].itemkd = item.itemId.replace(/\./g, "-");
        //兼容仍有老类型的套餐
        if (item.itemType == "B") {

            itemList[i].photoName = item.subItems[0].sbom["photoName"];
            itemList[i].photoPath = item.subItems[0].sbom["photoPath"];
            itemList[i].photoId = item.subItems[0].sbom["productId"];
            itemList[i].skuId = item.subItems[0].skuId;

        } else {

            itemList[i].photoName = item.sbom["photoName"];
            itemList[i].photoPath = item.sbom["photoPath"];
            itemList[i].productId = item.sbom["productId"];
        }



    }
};

ec.minicart.setNum = function (num) {
    if ('undefined' === typeof (num)) {
        return false;
    }

    num = parseInt(num) || 0;
    // console.log(num);
    $('#cart-total').html(num);
    if (num > 99) num = '99+';
    $('#header-cart-total').html(num);
    if (num < 1) {
        $('.j-hungBar .hungBar-cart span').html('').hide();
    } else {
        $('.j-hungBar .hungBar-cart span').html(num).show();
    }
}

ec.minicart.updateMiniCartNum = function () {
    ec.cart.getMicroCartTotalNumber(function (json) {
        if (json) ec.minicart.setNum(json.data);
    });
}


ec.minicart.readyContent = function () {
    ec.minicart.updateMiniCartNum();
}


//迷你购物车内容
ec.minicart.content = function () {
    ec.cart.getMicroCartFromOrder(function (json) {
        // 购物车商品数量
        if (json.resultCode == "200000") {
            var cartVO = json.data,
                $cartEmpty = $('#minicart-pro-empty'),
                $cartList = $('#minicart-pro-list-block'),
                $cartSettleup = $('#minicart-pro-settleup');
            var cartInfo = cartVO;

            // 微型购物车内容
            if (ec.minicart.microCartTpl) {
                var num = 0;
                if (cartInfo.totalNumber == 0) {
                    $('#button-minicart-go2confirm').hide();
                    $('#disbutton-minicart-go2confirm').show();
                } else {
                    $('#button-minicart-go2confirm').show();
                    $('#disbutton-minicart-go2confirm').hide();
                }
                //totalNumber  originalTotalNumber
                if (cartInfo.originalTotalNumber > 0) {
                    ec.minicart.setNum(cartInfo.originalTotalNumber);
                    $('#micro-cart-totalPrice').html('&yen;&nbsp;' + cartInfo.cashPay.toFixed(2));
                    if (cartInfo.originalPrice != cartInfo.cashPay) {
                        $('#micro-cart-totalOriginPrice').html('&yen;&nbsp;' + cartInfo.originalPrice.toFixed(2));
                    } else {
                        $('#micro-cart-totalOriginPrice').html("");
                    }
                    //ec.minicart.processCheck(json.data);
                    ec.minicart.photos(json.data);
                    ec.minicart.bundleNoBuy(json.data);
                    ec.minicart.bundls(json.data);




                    //防注入处理
                    for (var i = 0; i < json.data.itemInfos.length; i++) {
                        if (json.data.itemInfos[i].itemName.indexOf("script") > 0) {

                            json.data.itemInfos[i].itemName = safeStr(json.data.itemInfos[i].itemName);
                        }

                    };

                    html = ec.minicart.microCartTpl.parse('microCartList', json.data);

                    $('#minicart-goods-list').html(html);

                    $cartList.show();
                    $cartSettleup.show();
                    $cartEmpty.hide();
                    if (cartInfo.itemInfos.length > 5) {
                        $cartList.addClass('minicart-pro-list-scroll');
                    } else {
                        $cartList.removeClass('minicart-pro-list-scroll');
                    }

                    for (var i = 0; i < json.data.itemInfos.length; i++) {
                        if ((json.data.itemInfos[i].show == "false") && (json.data.itemInfos[i].selected)) {

                            ec.minicart.dissome(json.data.itemInfos[i].itemId);


                        }
                    }

                } else {
                    ec.minicart.setNum(0);
                    $cartEmpty.show();
                    $cartList.hide();
                    $cartSettleup.hide();
                }
            }

        }
        if (json.resultCode == "34900") {

            $("#cartInfo").html("商城火爆销售中，请您稍候再试。")

        }
    });
};

ec.minicart.click = function (thix) {
    ec.minicart.clickTo(thix)
}


ec.minicart.clickTo = function (thix) {



    ec.minicart.click.send(thix, function (json) {
        if (json.msg == "success") {
            var cartInfo = json.cartInfo.cartVO;
            if (cartInfo.miniTotalNumber > 0) {
                $('#button-minicart-go2confirm').show();
                $('#disbutton-minicart-go2confirm').hide();
                $('#micro-cart-totalPrice').html('&yen;&nbsp;' + cartInfo.miniTotalPrice.toFixed(2));
                if (cartInfo.miniTotalOriginalPrice != cartInfo.miniTotalPrice) {
                    $('#micro-cart-totalOriginPrice').html('&yen;&nbsp;' + cartInfo.miniTotalOriginalPrice.toFixed(2));
                } else {
                    $('#micro-cart-totalOriginPrice').html('');
                }
            } else {
                $('#button-minicart-go2confirm').hide();
                $('#disbutton-minicart-go2confirm').show();
                $('#micro-cart-totalPrice').html('&yen;&nbsp;0.00');
                $('#micro-cart-totalOriginPrice').html('');
            }
        }

        if (json.resultCode == "200000") {
            var cartInfo = json.data;
            if (cartInfo.totalNumber > 0) {
                $('#button-minicart-go2confirm').show();
                $('#disbutton-minicart-go2confirm').hide();
                $('#micro-cart-totalPrice').html('&yen;&nbsp;' + cartInfo.cashPay.toFixed(2));
                if (cartInfo.cashPay != cartInfo.originalPrice) {
                    $('#micro-cart-totalOriginPrice').html('&yen;&nbsp;' + cartInfo.originalPrice.toFixed(2));
                } else {
                    $('#micro-cart-totalOriginPrice').html('');
                }
            } else {
                $('#button-minicart-go2confirm').hide();
                $('#disbutton-minicart-go2confirm').show();
                $('#micro-cart-totalPrice').html('&yen;&nbsp;0.00');
                $('#micro-cart-totalOriginPrice').html('');
            }
        }

    });
};


ec.minicart.convertToCart = function (argList) {

    var sbs = [],
        types = [],
        qtys = [],
        ess = [],
        gfs = [],
        ops = [];

    for (var i = 0; i < argList.length; i++) {

        orderItem = argList[i];

        if (orderItem.itemType == "S0") {
            sbs.push(orderItem.itemId);
            if (orderItem.itemProp && orderItem.itemProp['Internal_Purchase'] && orderItem.itemProp['Internal_Purchase'] == 'true') {
                types.push(8);
            } else {
                types.push(1);
            }
            qtys.push(orderItem.qty);
            ess.push("");

            var gifts = [];
            if (orderItem.gifts && orderItem.gifts.length > 0) {
                for (var g = 0; g < orderItem.gifts.length; g++) {
                    gifts.push(orderItem.gifts[g].sbomCode);
                }
            }

            gfs.push(gifts.join("-"));
            ops.push(orderItem.operation);
        }
        if (orderItem.itemType == "S1") {
            sbs.push(orderItem.itemId);
            types.push(6);
            qtys.push(orderItem.qty);
            ess.push(orderItem.mainItemid);
            gfs.push("");
            ops.push(orderItem.operation);
        }
        if (orderItem.itemType == "S6") {
            sbs.push(orderItem.itemId);
            types.push(7);
            qtys.push(orderItem.qty);
            ess.push(orderItem.mainItemid);
            gfs.push("");
            ops.push(orderItem.operation);
        }
        if (orderItem.itemType == "B") {
            sbs.push(orderItem.itemId);
            if (orderItem.itemProp && orderItem.itemProp['Internal_Purchase'] && orderItem.itemProp['Internal_Purchase'] == 'true') {
                types.push(9);
            } else {
                types.push(2);
            }
            qtys.push(orderItem.qty);
            ess.push("");
            gfs.push("");
            ops.push(orderItem.operation);
        }
        if (orderItem.itemType == "20") {
            sbs.push(orderItem.itemId);
            types.push(20);
            qtys.push(orderItem.qty);
            ess.push(orderItem.mainItemid);
            gfs.push("");
            ops.push(orderItem.operation);
        }
    }

    //  var date = new Date();
    var data = {};
    //data.cartjson = jsonReqArg;
    data.sbs = sbs.join(',');
    data.types = types.join(',');
    data.qtys = qtys.join(',');
    data.ess = ess.join(',');
    data.gfs = gfs.join(',');
    data.ops = ops.join(',');

    return data;
}

ec.minicart.click.send = function (thix, callback) {

    var url;
    var id = $(thix).attr("value"),
        type = $(thix).attr("type"),
        operation = 5;
    //请求成功修改勾选状态
    var itemId = $(thix).attr("data-itemId").replace(/\./g, "-");
    ec.minicart.checkboxInverse(itemId);


    $('#button-minicart-go2confirm').show();
    $('#disbutton-minicart-go2confirm').hide();
    var operation = 5;
    if ($('#icon-choose-' + itemId).hasClass('icon-choose') && $('#checkbox-' + itemId).attr('checked')) {
        operation = 5;
    } else {
        operation = 6;
    }

    var data = {};

    var lists = [];
    lists.push($(thix).attr("data-itemId"));
    data.mainItemIds = JSON.stringify(lists);

    if (operation == 5) {

        // url = openapiDomain + '/cart/v1/select.json';
        url = '/cart/v1/select.json';
    } else {
        // url = openapiDomain + '/cart/v1/disselect.json';
        url = '/cart/v1/disselect.json';
    }




    // $.ajax({
    //     url: url,
    //     type: 'post',
    //     dataType: 'json',
    //     timeout: 10000,
    //     traditional: true,
    //     data: JSON.stringify(data),
    //     beforeSend: function (xhr) {
    //         xhr.withCredentials = true;
    //     },
    //     success: function (result) {
    //         callback(result);
    //     }
    // });
    utils.ajaxOpenAPI({
        type: 'post',
        url: url,
        dataType: "json",
        timeout: 10000,
        traditional: true,
        data: data,
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (result) {
            callback(result);
        }
    });
}

ec.minicart.dissome = function (paras) {
    ec.minicart.dissomeTO(paras);
};


ec.minicart.dissomeTO = function (paras) {
    if (typeof (csrftoken) == "undefined") {

        var script = document.createElement("script")
        script.type = "text/javascript"
        script.src = openapiDomain + '/csrftoken.js?random=' + Math.random();
        document.body.appendChild(script)
        //document.onload= openApiDomain +'/csrftoken.js?random=' + Math.random()
        //document.write("<script type='text/javascript' src='"+openApiDomain+"/csrftoken.js?random=" + Math.random() + "'></s" + "cript>");
    }


    ec.minicart.dissome.send(paras, function (json) {
        if (json.resultCode == "200000") {
            var cartInfo = json.data;
            if (cartInfo.totalNumber > 0) {
                $('#button-minicart-go2confirm').show();
                $('#disbutton-minicart-go2confirm').hide();
                $('#micro-cart-totalPrice').html('&yen;&nbsp;' + cartInfo.cashPay.toFixed(2));
                if (cartInfo.cashPay != cartInfo.originalPrice) {
                    $('#micro-cart-totalOriginPrice').html('&yen;&nbsp;' + cartInfo.originalPrice.toFixed(2));
                } else {
                    $('#micro-cart-totalOriginPrice').html('');
                }
            } else {
                $('#button-minicart-go2confirm').hide();
                $('#disbutton-minicart-go2confirm').show();
                $('#micro-cart-totalPrice').html('&yen;&nbsp;0.00');
                $('#micro-cart-totalOriginPrice').html('');
            }
        }

    });
};





ec.minicart.dissome.send = function (paras, callback) {
    var url;
    var data = {};
    var lists = [];
    lists.push(paras);
    data.mainItemIds = JSON.stringify(lists);
    url = openapiDomain + '/cart/v1/disselect.json';

    $.ajax({
        url: url,
        type: 'post',
        dataType: 'json',
        timeout: 10000,
        traditional: true,
        data: JSON.stringify(data),
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (result) {
            callback(result);
        }
    });
}




/**
 * 购物车勾选的商品为空
 */
ec.minicart.selectedItemIsEmpty = function () {
    var selected = $('#minicart-goods-list input[name=\'skuIds\']:checked').length + $('#minicart-goods-list input[name=\'bundleIds\']:checked').length;
    if (selected == 0) {
        ec.minicart.setNum(0);
        $('#micro-cart-totalPrice').html('&yen;&nbsp;0.00');
        $('#micro-cart-totalOriginPrice').html('');
        $('#button-minicart-go2confirm').hide();
        $('#disbutton-minicart-go2confirm').show();
        return true;
    }
    return false;
}

/**
 * 迷你购物车checkbox勾选
 */
ec.minicart.checkboxInverse = function (itemId) {
    if ($('#icon-choose-' + itemId).hasClass('icon-choose')) {
        $('#icon-choose-' + itemId).removeClass('icon-choose').addClass('icon-choose-normal');
        $('#checkbox-' + itemId).attr('checked', false);
    } else {
        $('#icon-choose-' + itemId).removeClass('icon-choose-normal').addClass('icon-choose');
        $('#checkbox-' + itemId).attr('checked', true);
    }
}

/**
 * 构造请求参数
 */
ec.minicart.buildOrderItemReqArgList = function () {
    var $skus = $('#minicart-goods-list input[name=\'skuIds\']:checked');
    var $bundles = $('#minicart-goods-list input[name=\'bundleIds\']:checked');

    var orderItemReqArgList = [];
    $skus.each(function () {
        var $tbody = $(this).closest('li');
        var id = this.value;
        var qty = $('#quantity-' + id, $tbody).val();
        var type = $('#quantity-' + id, $tbody).attr('data-type');
        var orderitem = {};
        var extendItem = {};
        var accidentItem = {};
        var giftItem = {};
        var extendId = $('input[name="extendIds"]', $tbody).val();
        if (extendId) {
            extendItem.itemId = extendId;
            extendItem.qty = qty;
            extendItem.itemType = 'S1';
            extendItem.mainItemid = id;
            orderItemReqArgList.push(extendItem);
        }

        var accidentId = $('input[name="accidentIds"]', $tbody).val();
        if (accidentId) {
            accidentItem.itemId = accidentId;
            accidentItem.qty = qty;
            accidentItem.itemType = 'S6';
            accidentItem.itemProp = { 'accidentItem': id };
            accidentItem.mainItemid = id;
            orderItemReqArgList.push(accidentItem);
        }

        var preferIds = $('#preferIds_' + id).attr('skuids');
        if (preferIds) {
            var sbomCodes = preferIds.split(',');
            for (var i = 0; i < sbomCodes.length; i++) {
                if (sbomCodes[i] != '') {
                    var preferItem = {};
                    preferItem.itemId = sbomCodes[i];
                    preferItem.qty = '1';
                    preferItem.itemType = '20';
                    preferItem.mainItemid = id;
                    orderItemReqArgList.push(preferItem);
                }
            }
        }

        if (qty) {
            orderitem.itemId = id;
            orderitem.qty = qty;
            if (type == '1') {
                orderitem.itemType = 'S0';
            }
            if (type == '8') {
                orderitem.itemType = 'S0';
                orderitem.itemProp = { 'Internal_Purchase': 'true' };
            }
            if (type == '2') {
                orderitem.itemType = 'B';
            }
            if (type == '9') {
                orderitem.itemType = 'B';
                orderitem.itemProp = { 'Internal_Purchase': 'true' };
            }

            var giftSbomCodes = $('#gift_sbomCodes_' + id).val();
            if (giftSbomCodes) {
                var gifts = [];
                var sbomCodes = giftSbomCodes.split(',');
                for (var i = 0; i < sbomCodes.length; i++) {
                    if (sbomCodes[i] != '') {
                        var gift = {};
                        gift.sbomCode = sbomCodes[i];
                        gifts.push(gift);
                    }
                }
                orderitem.gifts = gifts;
            }

            orderItemReqArgList.push(orderitem);
        }
    });

    $bundles.each(function () {
        var $tbody = $(this).closest('li');
        var id = this.value;
        var qty = $('#quantity-' + id, $tbody).val();
        var type = $('#quantity-' + id, $tbody).attr('data-type');
        var orderitem = {};
        if (qty) {
            orderitem.itemId = id;
            orderitem.qty = qty;
            if (type == '2') {
                orderitem.itemType = 'B';
            }
            if (type == '9') {
                orderitem.itemType = 'B';
                orderitem.itemProp = { 'Internal_Purchase': 'true' };
            }
            orderItemReqArgList.push(orderitem);
        }
    });

    return orderItemReqArgList;
}

ec.minicart.confirm = function () {


    var $skus = $('#minicart-goods-list input[name=\'skuIds\']:checked');
    var $bundles = $('#minicart-goods-list input[name=\'bundleIds\']:checked');




    if ($skus.length == 0 && $bundles.length == 0) {
        alert('请至少选中一个商品！');
        return;
    }


    if (!ec.account.isLogin()) {
        ec.redirectTo($('#top-index-loginUrl').attr("href"));
    }

    var sbs = [];
    var types = [];
    var qtys = [];
    var ess = [];

    var orderItemReqArgList = [];
    $skus.each(function () {
        var itemId = $(this).attr("data-itemId").replace(/\./g, "-");
        var $tbody = $(this).closest('li');
        var id = this.value;
        var skuCode = $(this).attr("data-scode");
        var qty = $('#quantity-' + id, $tbody).val();
        var type = $('#quantity-' + id, $tbody).attr("data-type");
        var bundle = $('#bundle-' + itemId).val();


        var orderitem = {};
        var extendItem = {};
        var accidentItem = {};

        if (qty) {
            orderitem.itemId = skuCode;
            orderitem.qty = qty;
            orderitem.itemType = type;
            orderitem.id = $(this).attr("data-itemId");

            if (type == "P") {
                var packageCodeList = { "package_code": bundle };
                orderitem.itemProp = packageCodeList;

            }



            var $gifts = $('input[name="giftId"]', $tbody);


            if ($gifts.length > 0) {

                var gifts2Order = [];
                $gifts.each(function () {
                    var aGift = { "sbomCode": this.value };
                    gifts2Order.push(aGift);
                });
                orderitem.gifts = gifts2Order;
            }
            orderitem.subOrderItemReqArgs = [];
            var $newBundle = $('#bundle-' + itemId).attr("data-scode");

            if ($newBundle) {
                orderitem.subOrderItemReqArgs = [];
                $.each($newBundle.split(","), function (index, value) {
                    if (value != '') {
                        var apack = { "itemId": value, "qty": qty, "itemType": "P" };
                        orderitem.subOrderItemReqArgs.push(apack);
                    }
                });

            }

            if (orderitem.itemType === 'DP') {
                var $dpobj = $('#dpPackage-' + itemId);
                orderitem.itemProp = { dp_package_code: $dpobj.attr('data-dpcode') };
                $.each($dpobj.val().split('|'), function (index, value) {
                    if (value != '') {
                        var dpsub = value.split(',');
                        orderitem.subOrderItemReqArgs.push({ itemId: dpsub[0], qty: qty, itemType: 'DP', itemProp: { dp_group: dpsub[1] } });
                    }
                });
            }

            var extendId = $('input[name="extendIds"]', $tbody).attr("data-scode");
            if (extendId) {
                extendItem.itemId = extendId;
                extendItem.qty = qty;
                extendItem.itemType = 'S1';
                extendItem.mainSkuCode = skuCode;
                //extendItem.id = $('input[name="extendIds"]', $tbody).attr("data-id");

                orderitem.subOrderItemReqArgs.push(extendItem);
            }

            var accidentId = $('input[name="accidentIds"]', $tbody).attr("data-scode");
            if (accidentId) {
                accidentItem.itemId = accidentId;
                accidentItem.qty = qty;
                accidentItem.itemType = 'S6';
                accidentItem.mainSkuCode = skuCode;
                //accidentItem.id = $('input[name="accidentIds"]', $tbody).attr("data-id");

                orderitem.subOrderItemReqArgs.push(accidentItem);
            }

            var ucareId = $('input[name="ucareIds"]', $tbody).attr("data-scode");
            if (ucareId) {
                var subItem = {};
                subItem.itemId = ucareId;
                subItem.qty = qty;
                subItem.itemType = 'S15';
                subItem.mainSkuCode = skuCode;
                orderitem.subOrderItemReqArgs.push(subItem);
            }

            var preferIds = $('#preferIds_' + id).val();
            //var preferItemId = $('#preferIds_'+id).attr("data-id");
            if (preferIds) //迷你购物车加价购到确认页
            {
                var sbomCodes = preferIds.split(',');
                //var itempCharid = preferItemId.split(',');

                for (var i = 0; i < sbomCodes.length; i++) {
                    if (sbomCodes[i] != '') {
                        var preferItem = {};
                        preferItem.itemId = sbomCodes[i];
                        //preferItem.id = itempCharid[i];
                        preferItem.qty = '1';
                        preferItem.itemType = 'J';
                        preferItem.mainSkuCode = skuCode;
                        orderitem.subOrderItemReqArgs.push(preferItem);
                    }
                }
            }

            orderItemReqArgList.push(orderitem);
        }


    });

    $bundles.each(function () {
        var $tbody = $(this).closest('li');
        var id = this.value;
        var qty = $('#quantity-' + id, $tbody).val();
        var type = $('#quantity-' + id, $tbody).attr("data-type");

        var orderitem = {};

        if (qty) {
            orderitem.itemId = id;
            orderitem.qty = qty;
            orderitem.itemType = type;

            orderItemReqArgList.push(orderitem);
        }
    });

    $("#miniCartToken").attr("src", openapiDomain + "/csrftoken.js?random=" + new Date().getTime());
    var jsonReqArg = ec.lang.json.stringify(orderItemReqArgList);

    setTimeout(function () {
        ec.cart.confirm(1, jsonReqArg);
    }, 500);

    //https://www.vmall.com/order/confirmcart
};




ec.pkg("ec.product");
// 最近浏览历史
ec.product.history = {
    load: function (callback, size, pid) {
        $.ajax({
            url: "/product/browsed/query.json",
            type: "get",
            data: {
                size: size ? size : undefined,
                pid: pid ? pid : undefined
            },
            dataType: "json",
            success: function (json) {
                if (!json.success) return;
                callback(json.list || []);
            }
        });
    },
    add: function (id) {
        $.ajax({
            type: "POST",
            url: "/product/browsed/add?_t=" + (new Date()).getTime(),
            dataType: "json",
            data: { "id": id },
            timeout: 10000,
            success: function () { },
            error: function () { }
        });
    },
    clear: function (callback) {
        $.ajax({
            type: "POST",
            url: "/product/browsed/clear?_t=" + (new Date()).getTime(),
            dataType: "json",
            timeout: 10000,
            success: function (json) {
                if (callback) { callback(); }
            },
            error: function () {
                if (callback) { callback(); }
            }
        });
    }
};

// 商品库存
ec.product.inventory = {
    _data: {},
    set: function (id, haveInventory) {
        this._data[id] = haveInventory;
    },
    haveInventory: function (id) {
        return this._data[id];
    }
};



ec.pkg("ec.cart");
//加入购物车时判断商品类型对应的购物车itemType类型
ec.cart.productTypeCorrespondence = function (productType) {
    if (productType == 1) {
        productType = 'S0'; //单品
    } else if (productType == 2) {
        productType = 'B'; //套餐
    } else if (productType == 6) {
        productType = 'S1'; //延保
    } else if (productType == 7) {
        productType = 'S6'; //意外保
    } else if (productType == 8) {
        productType = 'S0'; //内购单品
    } else if (productType == 9) {
        productType = 'B'; //内购套餐
    } else if (productType == 20) {
        productType = '20'; //优惠购
    } else {
        productType = 'S0'; //实物产品（缺省）
    }
    return productType;
}

// type 1:单品 2:组合套装   参数orderReqJsonArg, fromCart废弃
ec.cart.add = function (paras, options) {
    var data = {};


    var cartNumber = "add.json";
    if (paras.number == 1) {
        cartNumber = "addMulti.json"
        data.mainItems = paras.cartjson;
    } else {
        data.mainItem = paras.cartjson;
    }
    $.ajax({
        //url: domainCart + '/newcart/add.json',
        url: openapiDomain + '/cart/v1/' + cartNumber,
        dataType: 'json',
        type: "post",
        timeout: 30000,
        traditional: true,
        data: JSON.stringify(data),
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (result) {
            if (result.resultCode != 200000) {
                if (options.errorFunction) {
                    // [双十一加固]主站加入购物车失败提示信息优化
                    //if(console && console.log){
                    //   console.log("[双十一加固]主站加入购物车失败提示信息优化");
                    //}
                    result.msg = "已超购物车数量上限，您可以选择立即下单";
                    // if(result.retcode == "TV0004"){
                    // result.msg="您购物车添加的商品数量已达上限，请先结算部分商品哦";
                    // }
                    options.errorFunction(result);
                }
                return;
            }
            if (options.successFunction) {
                ec.util.cookie.set("cartAdded", ec.util.cookie.get("cartId"));
                options.successFunction(result);
            }
        },
        error: function (xhr, msg, e) {
            if (options.errorFunction) {
                var result = {};
                result.msg = msg;
                // [双十一加固]主站加入购物车失败提示信息优化
                //if(console && console.log){
                //    console.log("[双十一加固]主站加入购物车失败提示信息优化");
                //}
                result.msg = "购物车繁忙，您可以选择立即下单";
                options.errorFunction(result);
            }
        }
    });
};

ec.cart.getCartTotalNumber = function (callback, optional) {
    // [双十一加固]主站若没有cartId与uid则不需要调用number接口
    if (!ec.util.cookie.get("cartId") && !ec.account.isLogin()) {
        //if(console && console.log){
        //  console.log("[双十一加固]主站若没有cartId与uid则不需要调用number接口");
        //}
        return;
    }

    $.ajax({
        url: openapiDomain + "/cart/v1/getTotalNum.json?t=" + new Date().getTime() + "&saleChannel=1001&salePortal=1",
        dataType: "json",
        timeout: 10000,
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (json) {

            //ec.cart.changeAdded(json);

            if (json.resultCode == 200000) //success
            {
                callback(json, optional);
            } else {
                callback(null, optional);
            }
        }
    });
};

ec.cart.getCartItemsInternal = function (callback, optional) {
    var cartId = ec.util.cookie.get("cartId");
    //设置cookie
    //var salePortal= 1;

    if (ec.util.cookie.get("salePortal") != 1) {
        document.cookie = "salePortal=1; domain=.vmall.com ;path=/";
    }


    utils.ajaxOpenAPI({
        type: 'GET',
        url: "/cart/v1/queryCart.json?t=" + new Date().getTime(),
        dataType: "json",
        timeout: 10000,
        success: function (json) {
            if (json && json.data && json.data.itemInfos) {
                json.data.itemInfos.forEach(function (item) {
                    if (item.itemType == 'DP') {
                        if (item.invalidCauseReason == 6) {
                            item.invalidCauseReason = 106;
                        } else if (item.invalidCauseReason == 7) {
                            if (!item.numblimit) item.invalidCauseReason = 101;
                        } else if (item.invalidCauseReason > 0) {
                            item.invalidCauseReason = 101;
                        }
                    }
                    if (item.itemType == 'P') {
                        if (item.invalidCauseReason == 6) {
                            item.invalidCauseReason = 106;
                        } else if (item.invalidCauseReason == 7) {
                            if (!item.numblimit) item.invalidCauseReason = 101;
                        } else if (item.invalidCauseReason > 0) {
                            item.invalidCauseReason = 101;
                        } else {
                            var subItems = item.subItems;
                            for (var i = 0; i < subItems.length; i++) {
                                if (subItems[i].itemType == 'P' && subItems[i].invalidCauseReason > 0) {
                                    item.invalidCauseReason = 101;
                                }
                            }
                        }
                    }
                });
            }
            ec.cart.changeAdded(json);
            if (json.resultCode == 200000) //success
            {
                callback(json, optional);
            } else {
                callback(json, optional);
            }
        }
    });

    ec.minicart.updateMiniCartNum();
};

ec.cart.getCartItems = function (callback, optional) {
    var cartId = ec.util.cookie.get("cartId");
    if (cartId && cartId.length > 0) {
        var isValCas = ec.util.cookie.get("isValCas");
        // 如果用户非进行Cas验证，先进行验证，再合并游客的购物车信息
        if (isValCas && "false" == isValCas) {
            $.ajax({
                url: "/account/load",
                type: "POST"
            });
            isValCas = ec.util.cookie.get("isValCas");
        }
        if (ec.account.isLogin() && ec.account.id && ec.account.loginName) {
            ec.cart.doCache2cart(ec.cart.getCartItemsInternal, callback, optional);
        } else {
            ec.cart.getCartItemsInternal(callback, optional);
        }
    } else {
        ec.cart.getCartItemsInternal(callback, optional);
    }
};

ec.cart.buildQueryData = function (cartItems) {
    var ids = [];
    var types = [];
    var quantitys = [];
    var mainskus = [];
    for (var i = 0; i < cartItems.length; i++) {
        var cartItem = cartItems[i];
        if (cartItem.skuId) {
            ids.push(cartItem.skuId);
        } else if (cartItem.bundleId) {
            ids.push(cartItem.bundleId);
        } else {
            continue;
        }
        types.push(cartItem.productType);
        quantitys.push(cartItem.quantity);
        if (cartItem.mainSkuId) {
            mainskus.push(cartItem.mainSkuId);
        } else {
            mainskus.push("");
        }
    }

    var date = new Date();
    return {
        sbs: ids.join(","),
        types: types.join(","),
        qtys: quantitys.join(","),
        ess: mainskus.join(","),
        t: date.getTime()
    };
};

ec.cart.getOnceCartInfo = function (cartItems, callback, i) {
    var data = ec.cart.buildQueryData(cartItems);

    $.ajax({
        url: domainMain + "/order/shoppingCart/newCart.json",
        dataType: "jsonp",
        timeout: 10000,
        traditional: true,
        data: data,
        success: function (result) {
            if (i != null) {
                callback(result, i);
            } else {
                if (!result.success || !result.cartInfo) {
                    return;
                } else {
                    callback(result);
                }
            }
        },
        error: function () {
            if (i != null) {
                var result = {};
                result.success = false;
                callback(result, i);
            }
        }
    });
};

ec.cart.batchCount = 50;

ec.cart.getCartInfo = function (cartItems, callback) {
    if (!cartItems || cartItems.length == 0) {
        callback({});
        return;
    }

    // jsonp使用get，而get的参数长度有限制，需要分批获取，但是总价等信息前台目前无法计算，暂时先不做
    if (cartItems.length <= ec.cart.batchCount) {
        ec.cart.getOnceCartInfo(cartItems, callback);
    } else {
        var batchs = [];
        var currentBundleBatch = [];
        var currentSkuBatch = [];
        outer: for (var i = 0; i < cartItems.length; i++) {
            var cartItem = cartItems[i];
            if (cartItem.productType == 1) {
                currentSkuBatch.push(cartItem);
                if (currentSkuBatch.length == ec.cart.batchCount) {
                    batchs.push(currentSkuBatch);
                    currentSkuBatch = [];
                }
            } else if (cartItem.productType == 6) {
                // 返回值中extension排在最后
                for (var j = 0; j < batchs.length; j++) {
                    var batch = batchs[j];
                    if (batch[0].productType == 1) {
                        for (var k = 0; k < batch.length; k++) {
                            if (batch[k].skuId == cartItem.mainSkuId) {
                                batch.push(cartItem);
                                continue outer;
                            }
                        }
                    }
                }
                for (var j = 0; j < currentSkuBatch.length; j++) {
                    if (currentSkuBatch[j].skuId == cartItem.mainSkuId) {
                        currentSkuBatch.push(cartItem);
                    }
                }
            } else {
                currentBundleBatch.push(cartItem);
                if (currentBundleBatch.length == ec.cart.batchCount) {
                    batchs.push(currentBundleBatch);
                    currentBundleBatch = [];
                }
            }
        }

        if (currentBundleBatch.length > 0) {
            if (currentBundleBatch.length + currentSkuBatch.length <= ec.cart.batchCount) {
                currentBundleBatch.push(currentSkuBatch);
                batchs.push(currentBundleBatch);
            } else {
                batchs.push(currentBundleBatch);
                batchs.push(currentSkuBatch);
            }
        } else {
            if (currentSkuBatch.length > 0) {
                batchs.push(currentSkuBatch);
            }
        }

        var total = {};
        total.cartInfo = {};
        total.cartInfo.bundlerList = [];
        total.cartInfo.productList = [];
        total.cartInfo.couponList = [];
        total.cartInfo.premiumsList = [];
        total.cartInfo.totalOriginalPrice = 0;
        total.cartInfo.totalPrice = 0;
        total.limitstock = [];
        total.understock = [];
        var got = 0;
        for (var i = 0; i < batchs.length; i++) {
            var batch = batchs[i];
            ec.cart.getOnceCartInfo(batch, function (result, i) {
                got += 1;
                if (result.success && result.cartInfo) {
                    if (result.cartInfo.bundlerList && result.cartInfo.bundlerList.length > 0) {
                        total.cartInfo.bundlerList = total.cartInfo.bundlerList.concat(result.cartInfo.bundlerList);
                    }
                    if (result.cartInfo.productList && result.cartInfo.productList.length > 0) {
                        total.cartInfo.productList = total.cartInfo.productList.concat(result.cartInfo.productList);
                    }
                    if (result.cartInfo.couponList && result.cartInfo.couponList.length > 0) {
                        total.cartInfo.couponList = total.cartInfo.couponList.concat(result.cartInfo.couponList);
                    }
                    if (result.cartInfo.premiumsList && result.cartInfo.premiumsList.length > 0) {
                        total.cartInfo.premiumsList = total.cartInfo.premiumsList.concat(result.cartInfo.premiumsList);
                    }
                    total.cartInfo.totalOriginalPrice += result.cartInfo.totalOriginalPrice;
                    total.cartInfo.totalPrice += result.cartInfo.totalPrice;
                    if (result.limitstock && result.limitstock.length > 0) {
                        total.limitstock = total.limitstock.concat(result.limitstock);
                    }
                    if (result.understock && result.understock.length > 0) {
                        total.understock = total.understock.concat(result.understock);
                    }
                }
                if (got == batchs.length) {
                    callback(total);
                }
            }, i);
        }
    }
};

ec.cart.getCart = function (callback) {
    ec.cart.getCartItems(ec.cart.getCartInfo, callback);
};

ec.cart.getCartBaseInfo = function (cartItems, callback) {
    //    if (cartItems && cartItems.length > 0)
    //    {
    //        var data = ec.cart.buildQueryData(cartItems);
    //
    //        $.ajax({
    //            // url : "/order/shoppingCart/total.json",
    //            url : "/page/baseInfo.json",
    //            type : "POST",
    //            dataType : "json",
    //            data : data,
    //            success: function(json) {
    //                callback(json);
    //            }
    //        });
    //    }
    //    else
    //    {
    //        callback({
    //            cartInfo : {
    //                totalNumber : 0,
    //                totalPrice : 0
    //            }
    //        });
    //    }
};

ec.cart.getCartBase = function (callback) {
    ec.cart.getCartItems(ec.cart.getCartBaseInfo, callback);
};

ec.cart.buildMicroCartReq = function (cartItems) {
    var orderItemReqArgList = [];
    if (cartItems && cartItems.length > 0) {
        for (var i = 0; i < cartItems.length; i++) {
            var cartItem = cartItems[i];
            var orderitem = {};
            orderitem.itemId = cartItem.skuId;
            orderitem.qty = cartItem.quantity;
            if (cartItem.productType == '1') {
                orderitem.itemType = 'S0';

                var gifts2Order = [];
                if (cartItem.giftCartList && cartItem.giftCartList.length > 0) {
                    for (var j = 0; j < cartItem.giftCartList.length; j++) {
                        var aGift = { "sbomCode": cartItem.giftCartList[j].skuId };
                        gifts2Order.push(aGift);
                    }
                }

                orderitem.gifts = gifts2Order;
            }
            if (cartItem.productType == '8') {
                orderitem.itemType = 'S0';
                orderitem.itemProp = {
                    'Internal_Purchase': 'true'
                };
            }
            if (cartItem.productType == '6') {
                orderitem.itemType = 'S1';
                orderitem.itemProp = {
                    'main_skucode': cartItem.mainSkuId
                };
            }
            if (cartItem.productType == '7') {
                orderitem.itemType = 'S6';
                orderitem.itemProp = {
                    'main_skucode': cartItem.mainSkuId
                };
            }
            if (cartItem.productType == '2') {
                orderitem.itemId = cartItem.bundleId;
                orderitem.itemType = 'B';
            }
            if (cartItem.productType == '9') {
                orderitem.itemId = cartItem.bundleId;
                orderitem.itemType = 'B';
                orderitem.itemProp = {
                    'Internal_Purchase': 'true'
                };
            }
            orderItemReqArgList.push(orderitem);
        }
    }
    var jsonReqArg = ec.lang.json.stringify(orderItemReqArgList);
    var date = new Date();
    var data = {};
    data.cartReqJson = jsonReqArg;
    data.t = date.getTime();
    return data;
};

ec.cart.getMicroCartBaseInfo = function () {
    //    var data = [];
    //    $.ajax({
    //        url : "/page/baseInfo.json",
    //        type : "POST",
    //        dataType : "json",
    //        data : data,
    //        success: function(json) {
    //            // 优惠内购资格
    //            if(json.enterpriseUser){
    //                $("#preferential").html('<a  href="'+domainMain+'/member/enterprise" rel="nofollow">优惠内购</a>').show();
    //                $("#li-enterprise").html('<a href="'+domainMain+'/member/enterprise"><span>优惠内购</span></a>').show();
    //            }
    //
    //            var shopInfo = json.shopInfo;
    //            // 我的商城信息
    //            if(shopInfo)
    //            {
    //                $('#toolbar-orderWaitingHandleCount').html(shopInfo.orderWaitingHandleCount).attr('class',(shopInfo.orderWaitingHandleCount <= 0) ? 'hide' : '');
    //                $('#toolbar-couponCount').html(shopInfo.couponCount).attr('class',(shopInfo.couponCount <= 0) ? 'hide' : '');
    //                $('#toolbar-newMsgCount').html(shopInfo.newMsgCount).attr('class',(shopInfo.newMsgCount <= 0) ? 'hide' : '');
    //
    //                $('#top-couponCount').html(shopInfo.couponCount);
    //                $('#top-newMsgCount').html(shopInfo.newMsgCount).attr('class',(shopInfo.newMsgCount <= 0) ? 'hide' : '');
    //            }
    //        }
    //    });

    //    if (cartItems && cartItems.length > 0)
    //    {
    //        var data = ec.cart.buildMicroCartReq(cartItems);
    //
    //        $.ajax({
    //            url : "/page/baseInfo.json",
    //            type : "POST",
    //            dataType : "json",
    //            data : data,
    //            success: function(json) {
    //                callback(json);
    //            }
    //        });
    //    }
    //    else
    //    {
    //        callback({
    //            cartInfo : {
    //                totalNumber : 0,
    //                totalPrice : 0
    //            }
    //        });
    //    }
};

ec.cart.doCache2cart = function (doAfterCache, callback, optional) {


    // [双十一加固]主站若游客购物车商品数量为0则不调用合并接口
    var cartId = ec.util.cookie.get("cartId");
    var cartAdded = ec.util.cookie.get("cartAdded");

    //if(console && console.log){
    //      console.log("doCache2cart|"+cartId+"|"+cartAdded);
    //}

    if (!cartAdded || cartAdded != cartId) {
        //if(console && console.log){
        //  console.log("[双十一加固]不调用合并接口");
        //}
        ec.util.cookie.set("cartId", null, { "expires": -1, "domain": "vmall.com" });
        if (doAfterCache) {
            doAfterCache(callback, optional);
        }
        return;
    }

    $.ajax({
        //url : domainCart + "/newcart/cache2cart.json?saleChannel=1001&salePortal=1&t=" + new Date().getTime(),
        url: openapiDomain + "/cart/v1/guest2cart.json?t=" + new Date().getTime(),
        type: "post",
        dataType: "json",
        timeout: 10000,
        cache: false,
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (json) {
            if (doAfterCache) {

                //if(console && console.log){
                //  console.log("[双十一加固]调用合并接口");
                //}
                doAfterCache(callback, optional);
            }
        }
    });
}
ec.cart.getMicroCartTotalNumber = function (callback) {
    var optional = null;
    var cartId = ec.util.cookie.get("cartId");
    if (cartId && cartId.length > 0) {
        var isValCas = ec.util.cookie.get("isValCas");
        // 如果用户非进行Cas验证，先进行验证，再合并游客的购物车信息
        if (isValCas && "false" == isValCas) {
            $.ajax({
                url: "/account/load",
                type: "POST"
            });
            isValCas = ec.util.cookie.get("isValCas");
        }
        if (ec.account.isLogin()) {
            ec.cart.doCache2cart(ec.cart.getCartTotalNumber, callback, optional);
        } else {
            ec.cart.getCartTotalNumber(callback, optional);
        }
    } else {
        ec.cart.getCartTotalNumber(callback, optional);
    }
};


ec.cart.getMicroCartFromOrder = function (callback) {
    var optional = null;
    var cartId = ec.util.cookie.get("cartId");
    if (cartId && cartId.length > 0) {
        var isValCas = ec.util.cookie.get("isValCas");
        // 如果用户非进行Cas验证，先进行验证，再合并游客的购物车信息
        if (isValCas && "false" == isValCas) {
            $.ajax({
                url: "/account/load",
                type: "POST"
            });
            isValCas = ec.util.cookie.get("isValCas");
        }
        if (ec.account.isLogin()) {
            ec.cart.doCache2cart(ec.cart.getCartItemsInternal, callback, optional);
        } else {
            ec.cart.getCartItemsInternal(callback, optional);
        }
    } else {
        ec.cart.getCartItemsInternal(callback, optional);
    }
};

ec.cart.changeAdded = function (json) {
    var cartNumber = null;

    if (json && json.cartInfo && json.cartInfo.cartVO) {
        cartNumber = json.cartInfo.cartVO.totalNumber >= 0 ? json.cartInfo.cartVO.totalNumber : cartNumber;
    }

    if (json) {
        cartNumber = json.cartNumber >= 0 ? json.cartNumber : cartNumber;
    }

    if (cartNumber > 0) {
        ec.util.cookie.set("cartAdded", ec.util.cookie.get("cartId"));
    }

    if (cartNumber == 0) {
        ec.util.cookie.set("cartAdded", null);
    }
}

ec.cart.newDel = function (data, callback, noShowModal) {

    if (!noShowModal) {
        ec.ui.loading.show({
            modal: false
        });
    }
    var date = new Date();
    data.t = date.getTime();
    var settings = {
        data: data,
        dataType: "jsonp",
        timeout: 10000,
        timeoutFunction: function () {
            ec.ui.loading.hide();
            alert(timeOutInfo);
        },
        successFunction: function (json) {

            ec.cart.changeAdded(json);

            if ("0" != json.retcode) {
                ec.ui.loading.hide();
                ec.showError(json);
                return;
            }

            if (callback) {
                callback(json);
            }
            ec.ui.loading.hide();
            return;
        }
    };
    settings.url = domainCart + "/newcart/del.json";
    new ec.ajax().get(settings);
};

ec.cart.setRecover = function (recover) {
    ec.util.cookie.set("cart-recover", recover, {
        domain: "vmall.com",
        path: "/"
    });
};

ec.cart.removeSkuFromRecover = function (skuId, callback) {
    var recover = ec.util.cookie.get("cart-recover");
    if (recover) {
        var rege = new RegExp("," + skuId + ";\\d+,");
        recover = recover.replace(rege, ",");
        ec.cart.setRecover(recover);
    }
    if (callback) {
        callback(recover);
    }
};

ec.cart.confirm = function (state, jsonReqArg, orderTag) {
    var $form = $("#miniCartForm");
    $form.append('<input name="orderReqJson" type="hidden" value=\'' + jsonReqArg + '\' />');
    if (state) {
        $form.append('<input name="state" type="hidden" value="' + state + '" />');
    }
    if (orderTag) {
        $form.append('<input name="routingTag" type="hidden" value="' + orderTag + '" />');
    }

    $form.submit();

};

ec.pkg("ec.base");
// 初始化页面时需要调用的异步接口
ec.base.findSearchHotWordUrl = function (v) {
    var actUrl = "";
    for (var swa = 0; swa < ec.search.searchArr.length; swa++) {
        var swal = ec.search.searchArr[swa];
        if (v == swal.word.transHtmlAttribute()) {
            if (swal.isActivityWords == 1) {
                if (swal.activityUrl == null || swal.activityUrl == "") {
                    actUrl = "/search?keyword=" + encodeURIComponent(v);
                } else {
                    actUrl = swal.activityUrl.transHtmlAttribute();
                }
            } else {
                actUrl = "/search?keyword=" + encodeURIComponent(v);
            }
        }
    }
    return actUrl;
};

function pushMsgAssociationalWord(word) {
    ec.dapClick(300090101, {
        "searchWord": word,
        "type": "4",
        "click": "1"
    });
}

// 全局搜索关键字
var topSearchKeyword = "";
// 顶部搜索
function search(form) {
    var v = $("#search-kw").val();
    if (ec.util.isEmpty(v)) {
        return false;
    }
    // 去除前后空格
    v = $.trim(v);
    //搜索数据上报
    ec.dapClick(300090101, {
        "searchWord": v,
        "type": "1",
        "click": "1"
    });
    // 暂时不区分搜索频道 如华为、荣耀
    var searchUrl = ec.base.findSearchHotWordUrl(v);
    if (searchUrl == null || searchUrl == "") {
        ec.openWindow("/search?keyword=" + encodeURIComponent(v));
    } else {
        ec.openWindow(searchUrl);
    }
    return false;
}

function searchFunc(word) {
    //热搜词上报
    ec.dapClick(300090101, {
        "searchWord": word,
        "type": "2",
        "click": "1"
    });
    ec.openWindow("/search?keyword=" + encodeURIComponent(word));
}
(function () {

    var _flag;

    // 取消事件
    ec.ready(function () {
        $("#ec_ui_confirm_no").unbind("click").click(function () {
            $("#ec_ui_confirm").hide();
        });

        $("#ec_ui_confirm_new_no").unbind("click").click(function () {
            $("#ec_ui_confirm_new").hide();
        });

        $("#ec_ui_tips_yes").unbind("click").click(function () {
            $("#ec_ui_tips").hide();
        });

    });

    // 确认提示
    ec.ui.confirm = function (dom, msg) {

        var caller = ec.ui.confirm.caller,
            arguments = caller.arguments;

        if (_flag != null && arguments[arguments.length - 1] == _flag) {
            _flag = null;
            return true;
        }

        $("#ec_ui_confirm_msg").html(msg);

        var thix = $(dom),
            layter = $("#ec_ui_confirm"),
            offset = thix.offset(),
            top = offset.top - layter.outerHeight(true) - 5,
            left = offset.left - layter.outerWidth(true) / 2,
            args = [],
            aLen = arguments.length,
            dLen = arguments.callee.length;

        for (var i = 0; i < aLen; i++) {
            args.push(arguments[i]);
        }

        // 标识
        args[dLen] = (_flag = (new Date()).getTime());

        // 确定事件
        $("#ec_ui_confirm_yes").unbind("click").click(function () {
            $("#ec_ui_confirm").hide();
            // 回调原来的函数
            caller.apply(this, args);
            args = null;
        });

        layter.css({
            top: top,
            left: left,
            position: "absolute"
        }).show();
        layter.css("z-index", "999");
        return false;
    };

    // 确认提示new
    ec.ui.confirmNew = function (dom, msg, btnMsgYes, btnMsgNo) {

        var caller = ec.ui.confirmNew.caller,
            arguments = caller.arguments;

        if (_flag != null && arguments[arguments.length - 1] == _flag) {
            _flag = null;
            return true;
        }

        $("#ec_ui_confirm_new_msg").html(msg);
        if (btnMsgYes) {
            $("#ec_ui_confirm_new_yes").attr("title", btnMsgYes);
            $("#ec_ui_confirm_new_yes").html("<span>" + btnMsgYes + "</span>");
        }
        if (btnMsgNo) {
            $("#ec_ui_confirm_new_no").attr("title", btnMsgNo);
            $("#ec_ui_confirm_new_no").html("<span>" + btnMsgNo + "</span>");
        }

        var thix = $(dom),
            layter = $("#ec_ui_confirm_new"),
            offset = thix.offset(),
            top = offset.top - layter.outerHeight(true) - 5,
            left = offset.left - layter.outerWidth(true) / 9,
            args = [],
            aLen = arguments.length,
            dLen = arguments.callee.length;

        for (var i = 0; i < aLen; i++) {
            args.push(arguments[i]);
        }

        // 标识
        args[dLen] = (_flag = (new Date()).getTime());

        // 确定事件
        $("#ec_ui_confirm_new_yes").unbind("click").click(function () {
            $("#ec_ui_confirm_new").hide();
            // 回调原来的函数
            caller.apply(this, args);
            args = null;
        });

        layter.css({
            top: top,
            left: left,
            position: "absolute"
        }).show();

        return false;
    };

    ec.ui.tips = function (dom, msg) {
        $("#ec_ui_tips_msg").html(msg);

        var thix = $(dom),
            layter = $("#ec_ui_tips"),
            offset = thix.offset(),
            top = offset.top - layter.outerHeight(true) - 5,
            left = offset.left - layter.outerWidth(true) / 2;


        layter.css({
            top: top,
            left: left,
            position: "absolute"
        }).show();

    };



})();

$.extend(ec.form.validator.defaults, {
    errorClass: "error",
    autoFocus: false,
    errorFunction: function (obj, options) {
        var css = "icon-error",
            msg = options.msg[options.type] || options.msg["default"];
        msg = (msg.length <= 0) ? '&nbsp;' : msg;
        switch (options.type) {
            case "require":
                css = "icon-warn";
                break;
        }
        if (options.msg_ct) {
            $(options.msg_ct).html("<span class='vam " + css + "'>" + msg.transHtmlAttribute() + "</span>");
        } else {
            var id = (obj.attr("id") || obj.attr("name")) + "-msg";
            $("#" + id).remove();
            obj.after("<span id='" + id + "' class='vam " + css + "'>" + msg.transHtmlAttribute() + "</span>");
        }
        if (options.autoFocus) obj.focus();
    },
    successFunction: function (obj, options) {
        if (options.msg_ct) {
            $(options.msg_ct).html("");
        } else {
            $("#" + (obj.attr("id") || obj.attr("name")) + "-msg").remove();
        }
    }
});

// 添加手机的检验规则,香港为9或6或5开头的8位号码
ec.form.validator.register("mobile", function (str, options) {
    if (options.allowEmpty && ec.util.isEmpty(str)) { return true; }
    if (str.length < 11) { return false; }
    return /^1\d{10}$/.test(str);
});

// 添加固定电话验证规则[0755-88888888-123]；香港[00852-22341234-123]
ec.form.validator.register("phone", function (str, options) {
    if (options.allowEmpty && ec.util.isEmpty(str)) { return true; }
    if (str.length < 7) { return false; }
    return /^((0[0-9]{2,3}\-)?[2-9][0-9]{6,7}|((00852|\+852)\-)?([2-3][0-9]{7}))+(\-[0-9]{1,4})?$/.test(str);
});

// 添加手机号码或者固话的检验规则
ec.form.validator.register("mobleOrPhone", function (str, options) {
    if (options.allowEmpty && ec.util.isEmpty(str)) { return true; }
    if (str.length < 11) { return false; }
    return /(^((0[0-9]{2,3}\-)?[2-9][0-9]{6,7}|((00852|\+852)\-)?([2-3][0-9]{7}))+(\-[0-9]{1,4})?$)|(^(\+|00)?((86)?(1[3456789])[0-9]{9}|852[965][0-9]{7})$)/.test(str);
});

ec.form.validator.register("addressCheck", function (str, options) {
    if (options.allowEmpty && ec.util.isEmpty(str)) { return true; }
    if (str == '选择省-市-区-街道') {
        return false;
    }
    return true
});
//手机号码输入规则优化
function limitNum(event, ele) {
    var reg = /^(86008686|86860086|00868686|86868686|868686|860086|008686|0086|8686|86)/;
    $(ele).val(function () {
        return $(ele).val().replace(/\D/g, "").replace(reg, "");
    });
    if (/^1\d{10}$/.test($(ele).val())) {
        $(ele).removeClass("error");
        $("#tel-msg").removeClass("label-error").text("");
        $("#vatInvoice-mobile-error").removeClass("report-errors").text("")
    }
}
//检测IE浏览器版本,小于8.0弹窗提示用户下载新版本浏览器
function checkIEVersion() {
    var browserName = navigator.userAgent;
    if (parseInt(/msie/i.test(browserName) && browserName.match(/msie\s[\d.]+/i)[0].split(' ')[1], 10) <= 8) {
        var html = '<div class="ie8">\
                        <div class="h">\
                            您使用的浏览器版本过低，可能有安全风险<br>推荐扫码使用【华为商城APP】或者关注微信公众号【华为商城】\
                        </div>\
                        <div class="code clearfix">\
                            <p class="code1">\
                                <em></em>\
                                <span>华为商城APP</span>\
                            </p>\
                            <p class="code2">\
                                <em></em>\
                                <span>微信公众号</span>\
                            </p>\
                        </div>\
                        <div class="word">或者升级您的浏览器，继续访问</div>\
                        <div class="browser clearfix">\
                            <a href="https://www.google.cn/intl/zh-CN/chrome/browser/desktop/" target="_blank" class="logo-browser-chrome clearfix">\
                                <em></em>\
                                <span>chrome</span>\
                            </a>\
                            <a href="https://www.microsoft.com/zh-cn/download/internet-explorer.aspx" target="_blank" class="logo-browser-ie clearfix">\
                                <em></em>\
                                <span>IE浏览器</span>\
                            </a>\
                        </div>\
                    </div>';
        new ec.box(html, {
            boxid: "update-box",
            width: 960,
            height: 711,
            showButton: false,
            zIndex: 700
        }).open();
        $("body").css("overflow", "hidden")
    }
}
ec.form.validator.register("addressConfirmCheck", function () {
    if ($("#current-address").html() == '选择省-市-区-街道') {
        return false;
    } else {
        var form = $("#myAddress-form");

        ec.addr.syncCache(form);

        var province = form.find("input[name='province']").val(),
            city = form
                .find("input[name='city']").val(),
            district = form.find("input[name='district']").val(),
            street = form
                .find("input[name='street']").val(),
            needL4Addr = form.find("input[name='needL4Addr']").val();
        if ("" != province && "" != city && "" != district) {
            if (needL4Addr == 'true' && street == "") {
                return false;
            } else {
                return true;
            }
        } else {
            return false;
        }
    }
    return true
});


ec.form.validator.register("addressContractCheck", function () {
    var form = $("#order-address-add-form");
    var province = form.find("select[name='province'] option:selected").val(),
        city = form.find(
            "select[name='city'] option:selected").val(),
        district = form.find(
            "select[name='district'] option:selected").val(),
        street = form.find(
            "select[name='street'] option:selected").val();
    if ("" != province && "" != city && "" != district) {
        if ("" == street) {
            return false;
        } else {
            return true;
        }
    } else {
        return false;
    }
});

// 添加非法字符的检验规则
ec.form.validator.register("forbidChar", function (str, options) {
    if (options.allowEmpty && ec.util.isEmpty(str)) { return true; }
    str = str.replace('*', '@'),
        str = str.replace('--', '@'),
        str = str.replace('/', '@'),
        str = str.replace('+', '@'),
        str = str.replace('\'', '@'),
        str = str.replace('\\', '@'),
        str = str.replace('$', '@'),
        str = str.replace('^', '@'),
        str = str.replace('.', '@'),
        str = str.replace(';', '@'),
        str = str.replace('<', '@'),
        str = str.replace('>', '@'),
        str = str.replace('"', '@'),
        str = str.replace('=', '@'),
        str = str.replace('{', '@'),
        str = str.replace('}', '@');
    str = str.replace('%', '@');
    str = str.replace('~', '@');
    str = str.replace('&', '@');
    if (str.search(new RegExp("@")) != -1) {
        return false;
    }
    return true;
});

// 添加非法字符的检验规则 for address
ec.form.validator.register("invoiceForbidChar", function (str, options) {
    if (options.allowEmpty && ec.util.isEmpty(str)) { return true; }
    str = str.replace('--', '&');
    var invoiceRegex = /^[^\\*\\+\\\\/\\$\\^\\;<>\"=\\{\\}%~&]+$/g;
    var result = invoiceRegex.test(str);
    if (!result) {
        return false;
    }
    return result;
});
//添加非法字符的检验规则 for address
//ec.form.validator.register("forbidChar2" , function(str , options){
//    if(options.allowEmpty && ec.util.isEmpty(str)) {return true; }
////    var addrRegex = /^[^<>\\(\\)\'\"]+$/g;
//    var addrRegex = new RegExp(addressFrontRegex)
//    return addrRegex.test(str);
//});

// 数字工具
ec.ui.number = function (selector, options) {
    // 自定义购物车商品数量，只能输入数字
    var defaultOpt = {
        max: null,
        min: null,
        showButton: true,
        minusBtn: '<a class="icon-minus vam" href="javascript:;"><span>-</span></a>',
        plusBtn: '<a class="icon-plus vam" href="javascript:;"><span>+</span></a>'
    },
        thix = $(selector),
        options = $.extend(defaultOpt, options),
        checkNumber = function (e) { // 限制输入，只能为数字
            var currentKey = e.which,
                val = parseInt(this.value, 10),
                thisVal = (val < 1) ? 1 : val;

            if ((currentKey < 37 || currentKey > 40) && currentKey != 8 && currentKey != 46) {

                if (thisVal > options.max || thisVal < options.min) {
                    e.preventDefault();
                    return false;
                } else {
                    if ((currentKey < 48 || currentKey > 57) && (currentKey < 96 || currentKey > 105) && currentKey != 9) {
                        e.preventDefault();
                        return false;
                    }

                }

            }
        };

    thix.each(function () {

        var opt = $.extend({}, options),
            inputObj = $(this).css('ime-mode', 'disabled');

        var tmp = inputObj.attr("max");
        if (tmp) {
            options.max = opt.max = parseInt(tmp, 10) || opt.max;
        }

        tmp = inputObj.attr("min");
        if (tmp) {
            options.min = opt.min = parseInt(tmp, 10) || opt.min;
        }

        if (opt.showButton) {
            // 减少
            var minusBtn = $(opt.minusBtn).click(function () {
                var val = inputObj.val() || 0,
                    thisVal = parseInt(val, 10) - 1;
                if (typeof (opt.min) == "number" && thisVal < opt.min) {
                    return;
                }
                inputObj.val(thisVal).trigger("blur");
            }),
                // 增加
                plusBtn = $(opt.plusBtn).click(function () {
                    var val = inputObj.val() || 0,
                        thisVal = parseInt(val, 10) + 1;
                    if (typeof (opt.max) == "number" && thisVal > opt.max) {
                        return;
                    }
                    inputObj.val(thisVal).trigger("blur");
                });
            inputObj.after(plusBtn).before(minusBtn);
        }
        inputObj.data("ovalue", inputObj.val() || 0)
            .keydown(checkNumber)
            .keyup(function () {
                var thisVal = parseInt(this.value || 0);
                if (typeof (opt.min) == "number" && thisVal < opt.min) {
                    this.value = opt.min;
                    return;
                } else if (typeof (opt.max) == "number" && thisVal > opt.max) {
                    this.value = opt.max;
                    return;
                }
            })
            .blur(function () {
                if (typeof opt.onchange === "function") {
                    var oldVal = inputObj.data("ovalue"),
                        newVal = this.value || 0,
                        diff = parseInt(newVal, 10) - parseInt(oldVal, 10);
                    if (diff == 0) return;
                    inputObj.data("ovalue", newVal);
                    opt.onchange.call(this, newVal, diff);

                }
            });

    });

};
// 倒计时
ec.ui.countdown = function (selector, options) {
    var obj = $(selector),
        timer = obj.data("countdown"),
        timeIndex = 0,
        // 当前倒数目标时间
        preTarget,

        // options = $.extend({}, options),
        diff,
        diffMs = options.now.getTime() - new Date().getTime(),
        diffSecs = 0,
        getNext = function () {
            if (timeIndex >= options.times.length) return false;
            preTarget = options.times[timeIndex];
            timeIndex++;

            return true;
        },
        getDiffSec = function () {

            diffSecs = Math.round((ec.util.parseDate(preTarget).getTime() - new Date().getTime() - diffMs) / 1000);
            diffSecs = diffSecs <= 0 ? 0 : diffSecs;
            return diffSecs;
        },
        render = function () {

            diffSecs--;
            if (diffSecs <= 0) { diffSecs = 0; }
            diff = {
                day: Math.floor(diffSecs / (24 * 60 * 60)),
                hour: (options.html.indexOf("{#day}") >= 0) ?
                    Math.floor(diffSecs / 60 / 60) % 24 :
                    Math.floor(diffSecs / 60 / 60),
                minute: Math.floor(diffSecs / 60) % 60,
                second: diffSecs % 60
            };

            var html = options.html.replace(/{#day}/g, diff.day).replace(/{#hours}/g, diff.hour > 9 ? diff.hour : "0" + diff.hour).replace(
                /{#minutes}/g, diff.minute > 9 ? diff.minute : "0" + diff.minute).replace(/{#seconds}/g, diff.second > 9 ? diff.second : "0" + diff.second);
            obj.html(html);

            return (diffSecs <= 0) ? false : true;
        };

    if (!options.times) {
        options.times = [options.endTime];
    }

    clearInterval(timer);
    while (getNext()) {
        if (getDiffSec() <= 0)
            continue;
        break;
    }

    if (!render()) { return; }

    timer = setInterval(function () {

        if (!render()) {

            if (options.callback) {
                options.callback(options);
            }

            if (!getNext()) {
                clearInterval(timer);
            } else {
                getDiffSec();
            }
        }
    }, 1000);

    obj.data("countdown", timer);
};
// 图片滚动加载
(function () {

    var
        _window = $(window),
        _binded = false,
        _doc = document.compatMode == 'CSS1Compat' ? document.documentElement : document.body,
        _scrollTopSrart = 0,
        _scrollTopEnd = 0,
        _clientHeight,
        _imgList = [],
        _timer,

        // 渲染图片显示
        _renderImg = function (img) {
            var
                top = img.offset().top - 300,
                pos = top + img.height() + 600;

            if ((top >= _scrollTopSrart && top <= _scrollTopEnd) || (pos >= _scrollTopSrart && pos <= _scrollTopEnd)) {
                img.attr("src", img.attr("data-lazy-src"));
                img.removeAttr("data-lazy-src");
                return true;
            }
            return false;
        };

    // 绑定事件
    _bindEvent = function () {

        var scrollEvent = function () {
            clearTimeout(_timer);
            _timer = setTimeout(function () {

                _scrollTopSrart = _window.scrollTop();
                _scrollTopEnd = _scrollTopSrart + _clientHeight;

                var img;

                for (var i = 0; i < _imgList.length; i++) {
                    img = _imgList[i];
                    if (_renderImg(img)) {
                        _imgList.splice(i, 1);
                        i--;
                    }
                }

                if (!_imgList || _imgList.length == 0) {
                    _window.unbind("scroll", scrollEvent);
                    _window.unbind("resize", resizeEvent);
                }

            }, 100);

        },

            resizeEvent = function (event) {
                _clientHeight = _doc.clientHeight;
            };

        _window.bind("scroll", scrollEvent);
        _window.bind("resize", resizeEvent);


        _clientHeight = _doc.clientHeight;

        _scrollTopSrart = _window.scrollTop();
        _scrollTopEnd = _scrollTopSrart + _clientHeight;
    };




    ec.ui.lazyLoad = function (selector) {

        if (!_binded) {
            _bindEvent();
            _binded = true;
        }

        $(selector).each(function () {
            // 仅支持图片
            if (this.tagName != "IMG") return;

            var thix = $(this);

            if (thix.attr("data-lazy-src")) {
                if (!_renderImg(thix)) {
                    thix.attr("src", ol.libPath + "../../images/echannel/loading/mask.png");
                    _imgList.push(thix);
                }
            }

        });


    };
})();

ec.ready(function () {
    ec.ui.lazyLoad($("body").children(".home-channel-menu,.layout,.g,.home-channel-container,.channel-floor,.home-channel-floor").find("img"));
    ec.ui.hrefSetTime();
    ec.account.displaySaleConfig();
});

// 登录超时和错误提示
ec.showError = function (json) {
    if (json.code == 'login') {
        alert('登录超时，请重新登录');
        location.reload();
        return false;
    }
    alertS(json.msg);
};
// 用户反馈
// 用户反馈  验证可行
ec.load("ajax", { loadType: "lazy" });
(function () {

    var _init = function () {
        var _vb = ec.form.validator.bind,
            content = $('#surveryContent'),
            contact = $('#surveryContact'),
            code = $('#surveryVerify');

        _vb(content, {
            type: ["require", "length", "forbidChar"],
            validOnChange: true,
            msg_ct: "#errMsg",
            max: 200,
            min: 5,
            msg: {
                "require": "您还没有输入反馈信息哦",
                "length": "反馈信息内容请控制在5~200个字符之间",
                "forbidChar": "反馈信息里包含非法字符"
            }
        });
        _vb(contact, {
            type: ["require", "length"],
            validOnChange: true,
            msg_ct: "#errMsg",
            min: 2,
            max: 100,
            msg: {
                "require": "请输入您的联系方式",
                "length": "请输入正确的联系方式"
            }

        });
        _vb(code, {
            type: ["require"],
            validOnChange: true,
            msg_ct: "#errMsg",
            msg: {
                "require": "请输入验证码"
            }
        });

        if (ec.account.isLogin()) {// 已登录
            contact.val(ec.account.email || ec.account.mobile || ec.account.loginName);
        }
        ec.form.input.label(contact, '选填邮箱或者商城账户');
        ec.form.input.label(content, '谢谢您的宝贵建议，我们将不断改进');
    };


    ec.survery = {
        open: function () {
            if (_init) {
                _init();
                _init = null;
            }
            $("#footerToken").attr("src", openapiDomain + "/csrftoken.js?random=" + new Date().getTime());
            var obj = $("#survery-box");
            var innerWidth = $(window).width();
            var innerHeight = $(window).height();
            var width = obj.width();
            var height = obj.height();
            var mask = document.createElement('div');
            mask.className = 'mask-new';
            mask.style.width = innerWidth + 'px';
            mask.style.height = innerHeight + 'px';
            mask.style.background = '#000';
            mask.style.position = 'fixed';
            mask.style.top = 0;
            mask.style.left = 0;
            mask.style.zIndex = 501;
            mask.style.opacity = 0.4;
            mask.style.filter = 'progid:DXImageTransform.Microsoft.Alpha(Opacity=50)';
            document.body.appendChild(mask);

            ec.survery.reloadCode();
            $("#survery-box").css({
                position: 'fixed',
                left: (innerWidth / 2 - width / 2) + 'px',
                top: (innerHeight / 2 - height / 2) + 'px',
                'z-index': 999
            }).show();
            $(window).resize(function () {
                innerWidth = $(window).width();
                innerHeight = $(window).height();
                $("#survery-box").css({
                    left: (innerWidth / 2 - width / 2) + 'px',
                    top: (innerHeight / 2 - height / 2) + 'px'
                });
            })
        },
        close: function () {
            ol.ui.masker.unmask();
            $('.mask-new').remove();
            $("#survery-box").hide();
        },
        submit: function () {
            var form = $("#form-feedback");
            // 表单验证
            if (!ec.form.validator(form, true)) {
                return false;
            }
            $.ajax({
                type: "post",
                url: domainMain + "/feedback.json",
                dataType: "json",
                timeout: 10000,
                async: true,
                data: {
                    type: $("#surverytype").val(),
                    content: $("#surveryContent").val(),
                    contact: $("#surveryContact").val(),
                    code: $("#surveryVerify").val()
                },
                beforeSend: function (xhr) {
                    xhr.withCredentials = true;
                },
                success: function (json) {
                    if (!json.success) {
                        // ec.showError(json);
                        ec.survery.reloadCode();
                        $("#surveryVerify").val("");
                        $('#errMsg').html('<span class="vam icon-warn">提交失败，' + json.msg + '</span>');
                        return;
                    }
                    alert('提交成功，华为商城感谢您的宝贵建议！');
                    ec.survery.close();
                    $('#surveryContent,#surveryVerify').val('');
                    return;
                }
            });
            return false;
        },
        reloadCode: function () {
            gid('surveryVerifyImg').src = domainMain + "/feedback/randomCode?_t=" + (new Date()).getTime();
        },
        validate: function () {
            $.ajax({
                type: "post",
                url: domainMain + "/feedback/validRandomCode?_t=" + (new Date()).getTime(),
                timeout: 10000,
                dataType: "jsonp",
                data: {
                    code: $("#surveryVerify").val()
                },
                success: function (json) {
                    if (json.success) {
                        return;
                    }
                    gid('surveryVerifyImg').src = domainMain + "/feedback/randomCode?_t=" + (new Date()).getTime();
                    $('#surveryVerify').val('');
                    return;
                }
            });
        }
    };

})();


// 置顶按钮控制
$(function () {
    var win = $(window),
        timer,
        $btn = $('#hungBar-top'),
        setTime = function () {
            $btn.stop();
            if (win.scrollTop() > 1200) {
                $btn.fadeTo(20, 1);
            } else {
                $btn.fadeOut(20);
            }
            timer = null;
        };
    win.scroll(function () {
        timer = setTimeout(setTime, 50);
    });
    setTime();

    $(".hungBar-top").bind("click", function () {
        $("html,body").animate({
            scrollTop: "0px"
        }, 400)
    })
});

// 设置a标签中href，替换页面的时间戳
(function () {
    ec.ui.hrefSetTime = function () {
        var time = (new Date()).getTime();
        try {
            $("a[timeType=timestamp]").each(function () {
                var obj = $(this);
                obj.attr("href", obj.attr("href").replace(/timestamp/g, time));
            });
        } catch (err) { }
    };
})();
// 收货地址密钥
ec.pkg("ec.encipher");
ec.encipher.base = 10;
ec.encipher.bigPowMod = function (a, b, c) {
    a = str2bigInt(a, ec.encipher.base);
    b = str2bigInt(b, ec.encipher.base);
    c = str2bigInt(c, ec.encipher.base);
    var result = powMod(a, b, c);
    result = bigInt2str(result, ec.encipher.base);
    return result;
};
ec.encipher.randomInt = function (bits) {
    var result = randBigInt(bits, 0);
    return bigInt2str(result, ec.encipher.base);
};

ec.pkg("ec.addr");

ec.addr.list = function (callback) {
    $.ajax({
        type: 'get',
        url: domainShoppingConfig + "/address/list.json?t=" + new Date().getTime(),
        dataType: "json",
        async: false,
        timeout: 10000,
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (json) {
            if (!json.success) {
                return;
            }
            if (json.shoppingConfigList.length == 0) {
                $("#base-table").find(".report-errors").show();
            } else {
                $("#base-table").find(".report-errors").hide();
            }
            callback(json.shoppingConfigList, json.randomFlag);
        }

    });
};

ec.addr.syncCache = function (formObj) {

    formObj.find('input[name=province]').attr("value", formObj.find('input[name=provinceG]').attr("value"));
    formObj.find('input[name=city]').attr("value", formObj.find('input[name=cityG]').attr("value"));
    formObj.find('input[name=district]').attr("value", formObj.find('input[name=districtG]').attr("value"));
    formObj.find('input[name=street]').attr("value", formObj.find('input[name=streetG]').attr("value"));
    formObj.find('input[name=needL4Addr]').attr("value", formObj.find('input[name=needL4AddrG]').attr("value"));

}

ec.addr.save = function (form, options) {
    var formObj = $(form);
    var id = formObj.find('input[name=id]').val();
    var url = "/address/add.json";
    var _method = "post";

    ec.addr.syncCache(formObj);

    var province = formObj.find('input[name=province]').val();
    var city = formObj.find('input[name=city]').val();
    var district = formObj.find('input[name=district]').val();
    var street = formObj.find('input[name=street]').val();
    var needL4Addr = formObj.find("input[name='needL4Addr']").val();
    //    if (!province || !city || !district){
    //        formObj.find("#myAddress-msg").addClass("icon-error label-error");
    //        return;
    //    }else if(needL4Addr =='true' && street == ""){
    //        formObj.find("#myAddress-msg").addClass("icon-error label-error");
    //        return;
    //    }else{
    //        formObj.find("#myAddress-msg").removeClass("icon-error label-error");
    //    }

    var mobileObj = formObj.find("input[name=mobile]");
    var phoneObj = formObj.find("input[name=phone]");

    if (mobileObj.hasClass('error') || phoneObj.hasClass('error')) {
        return false;
    }

    if (!ec.form.validator(formObj, false)) {
        return false;
    }

    var mobile = $.trim(formObj.find("input[name=mobile]").val());
    var phone = $.trim(formObj.find("input[name=phone]").val());
    if (ec.util.isEmpty(mobile)) {
        return false;
    }

    if (options.afterCheck) {
        options.afterCheck(id);
    }

    if (options.type != 'add') {
        url = "/address/modify/" + id + ".json";
    }

    var consignee = formObj.find('input[name=consignee]').val();
    var address = formObj.find('input[name=address],textarea[name=address]').val();
    //    address  = ol.util.escapeHtml(address);
    var zipCode = formObj.find('input[name=zipCode]').val();
    var randomFlag = formObj.find('input[name=randomFlag]').val();
    var data = {};
    data.consignee = consignee;
    data.province = province;
    data.city = city;
    data.district = district;
    data.street = street;
    data.address = address;
    data.zipCode = zipCode;
    data.mobile = mobile;
    data.phone = phone;
    data.randomFlag = randomFlag;
    var $defaultFlag = formObj.find('input[name=defaultFlag]');
    if ($defaultFlag.length == 1 && $defaultFlag[0].checked && !$defaultFlag[0].disabled) {
        data.defaultFlag = $defaultFlag.val();
    }
    data.t = new Date().getTime();
    $.ajax({
        url: domainShoppingConfig + url + "?_method=" + _method,
        type: "post",
        data: data,
        async: false,
        dataType: "json",
        timeout: 20000,
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (json) {
            if (!json.success) {
                ec.showError(json);
                return;
            }

            if (options.successFunction) {
                options.successFunction(json.shoppingConfig, form);
            }
        },
        error: function () {
            alert("保存超时，请重试！");
        }
    })

    return false;
};
// 更改默认地址
ec.addr.setDefault = function (id, options) {
    var B = ec.util.cookie.get("sc_b");

    $.ajax({
        //        url: domainShoppingConfig + "/address/setDefault.json?id=" + id + "&_method=PUT&t="+new Date().getTime(),
        url: domainShoppingConfig + "/address/setDefault.json?id=" + id + "&t=" + new Date().getTime(),
        type: "post",
        async: false,
        dataType: "json",
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (json) {
            if (!json.success) {
                ec.showError(json);
                return;
            }

            if (options.successFunction) {
                options.successFunction(id);
            }
        },
        error: function () {
            alert("操作超时，请重试！");
        }
    })
};

ec.addr.getAll = function (options) {
    $.ajax({
        url: domainShoppingConfig + "/member/myAddresses.json",
        type: "post",
        async: false,
        dataType: "json",
        timeout: 20000,
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (json) {
            if (!json.success) {
                ec.showError(json);
                return;
            }

            if (options.successFunction) {
                options.successFunction(json);
            }
        },
        error: function () {
            alert("操作超时，请重试！");
        }
    })
};

ec.addr.del = function (id, options) {
    $.ajax({
        //        url: domainShoppingConfig + "/address/" + id + ".json?_method=delete",
        url: domainShoppingConfig + "/address/del/" + id + ".json",
        type: "post",
        async: false,
        dataType: "json",
        timeout: 10000,
        beforeSend: function (xhr) {
            xhr.withCredentials = true;
        },
        success: function (json) {
            if (!json.success) {
                ec.showError(json);

                if (json.code == 'default') {
                    if (options.deleteDefault) {
                        options.deleteDefault(id);
                    }
                }
                return;
            }

            if (options.successFunction) {
                options.successFunction(id);
            }
        },
        error: function () {
            alert("读取超时，请重试！");
        }
    })
};




ec.pkg("ec.prescription");
/**
 * 获取预计到货时间
 *
 * @param callback
 *            回调函数
 * @param distinctId
 *            区ID
 * @param price
 *            金额
 * @param invoiceonfig
 *            发票类型
 */
ec.prescription.getEstimateGetOrderTime = function (callback, distinctId, price,
    invoiceonfig) {
    $.ajax({
        url: "/order/estimateTime.json?d=" + distinctId + "&p=" + price +
            "&i=" + invoiceonfig,
        dataType: "json",
        timeout: 20000,
        timeout: function () {
            callback(null, true);
        },
        beforeSend: function () {
            ec.ui.loading.show({
                modal: false
            });
        },
        complete: ec.ui.loading.hide,
        success: function (json) {
            callback(json.info, false);
        },
        error: function () {
            callback(null, true);
        }
    });
};

/**
 * 获取预计到货时间 详情页调用
 *
 * @param callback
 *            回调函数
 * @param distinctId
 *            区ID
 * @param price
 *            金额
 * @param invoiceonfig
 *            发票类型
 */
ec.prescription.getEstimateGetOrderTime2 = function (callback, distinctId, price,
    invoiceonfig, skuCodeList, countTemp) {
    $.ajax({
        url: "/order/estimateArrivalTime.json?d=" + distinctId + "&p=" + price +
            "&i=" + invoiceonfig + "&l=" + skuCodeList + "&k=" + countTemp,
        dataType: "json",
        timeout: 20000,
        timeout: function () {
            callback(null, true);
        },
        success: function (json) {
            callback(json, false);
        },
        error: function () {
            callback(null, true);
        }
    });
};


/**
 * 获取预计到货时间
 *
 * @param callback
 *            回调函数
 * @param distinctId
 *            区ID
 * @param price
 *            金额
 * @param invoiceonfig
 *            发票类型
 */
ec.prescription.queryPreDeliveryAndArrival = function (callback, districtId, price,
    invoiceType, sbomCode) {
    $.ajax({
        url: "/order/queryPreDeliveryAndArrival.json",
        type: "POST",
        data: {
            "districtId": districtId,
            "price": price,
            "invoiceType": invoiceType,
            "sbomCode": sbomCode
        },
        dataType: "json",
        timeout: 20000,
        timeout: function () {
            callback(null, true);
        },
        success: function (json) {
            callback(json, false);
        },
        error: function () {
            callback(null, true);
        }
    });
};

getPointBalance = function () {
    utils.ajaxOpenAPI({
        type: 'GET',
        url: "/point/queryUserPointBalanceDetail.json",
        dataType: "json",
        timeout: 10000,
        success: function (json) {
            if (json.resultCode != "200000") {
                $("#newPointlogin_status").hide();
                return;
            }
            json = json.data;
            var pointBlance = json.pointBlance;
            $("#userPointBalance").text(pointBlance);
            //特权页积分赋值
            if (parseInt(pointBlance) > parseInt(999)) {
                $("#balanceicon_privilege").empty().html('<a href="/member/newpoint?t=' + new Date().getTime() + '" target="_blank">' + 999 + '+</a>');
            } else {
                $("#balanceicon_privilege").empty().html('<a href="/member/newpoint?t=' + new Date().getTime() + '" target="_blank">' + pointBlance + '</a>');
            }
            //我的商城首页积分赋值
            $("#balanceicon_myCenter").empty().html('<a href="/member/newpoint?t=' + new Date().getTime() + '" target="_blank">' + pointBlance + '</a>');
            $("#balanceicon_myCenter").removeClass("p-price-no");
        }
    });
};

/**
 * 计算字符串长度 中文字符占两个字符
 *
 * @param str
 *            待计算的字符串
 */
ec.getLength = function (str) {
    if (str == null) return 0;
    if (typeof str != "string") {
        str += "";
    }

    return str.replace(/[^\x00-\xff]/g, "01").length;
};

/**
 * 检测是否包含中文
 *
 * @param s
 *            待检测的字符串
 */
ec.isChina = function (s) {
    var patrn = /[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi;
    if (!patrn.exec(s)) {
        return false;
    } else {
        return true;
    }
};
/**
 * js截取字符串，中英文都能用
 *
 * @param str：需要截取的字符串
 * @param len:
 *            需要截取的长度
 */
ec.cutstr = function (str, len) {
    var str_length = 0;
    var str_len = 0;
    str_cut = new String();
    str_len = str.length;
    // 搜索历史词是否包含中文
    if (!ec.isChina(str)) {
        len = len + 6;
    }

    for (var i = 0; i < str_len; i++) {
        a = str.charAt(i);
        str_length++;
        if (escape(a).length > 4) {
            // 中文字符的长度经编码之后大于4
            str_length++;
        }
        str_cut = str_cut.concat(a);
        if (str_length >= len) {
            str_cut = str_cut.concat("...");
            return str_cut;
        }
    }
    // 如果给定字符串小于指定长度，则返回源字符串；
    if (str_length < len) {
        return str;
    }
};

/**
 * 检测是否是IE浏览器
 */
ec.checkBrowerIE = function () {
    var ua = window.navigator.userAgent;
    // 如果是IE浏览器，则返回true
    if (!!window.ActiveXObject || "ActiveXObject" in window || ua.indexOf("MSIE") > -1 || ua.indexOf("Trident") > -1) {
        return true;
    } else {
        return false;
    }
};

/**
 * 将使用freemark的html函数转义的字符串还原 主要对双引号、<、>、&与/等进行还原
 *
 * @param sourceStr
 *            转义后字符串
 */
ec.freemarkerDecode = function (sourceStr) {
    sourceStr = sourceStr.replaceAll("&apos;", "'"); // 替换单引号
    sourceStr = sourceStr.replaceAll("&amp;", "&"); // 替换&
    sourceStr = sourceStr.replaceAll("&quot;", "\""); // 替换双引号
    sourceStr = sourceStr.replaceAll("&nbsp;", " "); // 替换空格
    sourceStr = sourceStr.replaceAll("&lt;", "<"); // 替换左尖括号
    sourceStr = sourceStr.replaceAll("&gt;", ">"); // 替换右尖括号
    sourceStr = sourceStr.replaceAll("\t", "&nbsp;&nbsp;"); // 替换左斜杠

    return sourceStr;
};

/**
 * 将返回的结果去重
 *
 * @param sourceHis
 *            待去重的搜索历史
 */
ec.searchHistoryUnique = function (sourceHis) {
    var new_arr = [];
    //console.log(sourceHis);
    for (var i = 0; i < sourceHis.length; i++) {
        // 取得搜索词
        var items = sourceHis[i];
        // 判断元素是否存在于new_arr中，如果不存在则插入到new_arr的最后
        if ($.inArray(items, new_arr) == -1) {
            new_arr.push(items);
        }
    }
    //console.log(new_arr);
    return new_arr;
};

ec.pkg("ec.search");
// 搜索历史显示最大长度
var searchHistoryMaxLength = 48;
var hisWordListLen = 0;
/**
 * 查询用户历史搜索
 */
ec.search.querySearchHistory = function (flag) {
    new ec.ajax().get({
        url: '/searchHistory.json?t=' + new Date().getTime(),
        type: "post",
        dateType: "json",
        timeout: 10000,
        timeoutFunction: function () {
            //alert("操作超时，请重试！");
        },
        successFunction: function (json) {
            var f = flag;
            var hisList = [];
            if (json.success != undefined && !json.success) {
                //console.log('返回异常');
                hisWordListLen = 0;
                ec.search.hotWord(f, hisList, hisWordListLen)
                return;
            }

            hisList = json.searchHistoryList;
            hisWordListLen = hisList.length;
            //console.log(hisList);
            var html = [];
            var newSearchHistoryMaxLength;
            if (hisWordListLen > 6) {
                hisWordListLen = 6;
            }
            for (var j = 0; j < hisWordListLen; j++) {
                // 取得历史搜索词
                var hisKeyword = hisList[j];
                // 计算历史搜索词长度
                var hisKeywordLen = ec.getLength(hisKeyword);
                hisKeyword = hisKeyword.transHtmlAttribute();
                var encoceText = encodeURIComponent(hisKeyword);
                // 暂时不区分搜索频道 如华为、荣耀
                var searchWordUrl = ec.base.findSearchHotWordUrl(hisKeyword);
                if (searchWordUrl == null || searchWordUrl == "") {
                    html.push('<li><a href="/search?keyword=' + encoceText + '" target="_blank" onclick="pushMsgSearchHistory(\'' + encoceText + '\')" data-value="' + encoceText + '">');
                } else {
                    html.push('<li><a href="' + searchWordUrl + '" target="_blank" onclick="pushMsgSearchHistory(\'' + encoceText + '\')" data-value="' + encoceText + '">');
                };
                if (hisKeywordLen > searchHistoryMaxLength) {
                    // 截取字符串
                    html.push($("<div/>").text(ec.cutstr(hisKeyword, searchHistoryMaxLength)).html());
                } else {
                    html.push($("<div/>").text(hisKeyword).html());
                }

                html.push('</a></li>');
            }
            // 设置值
            $("#search-history-list").html(html.join(""));
            // 显示值
            $("#search-history").show();
            if ($("#search-history").is(':visible') || $(".autocomplete").is(':visible')) {
                $("#search-bar-form").addClass("hover")
            } else {
                $("#search-bar-form").removeClass("hover")
            }

            ec.search.hotWord(f, hisList, hisWordListLen);
        },
        errorFunction: function (json) {
            //console.log('返回异常');
        }
    });
};

/**
 * 搜索历史记录上报
 */
function pushMsgSearchHistory(word) {
    ec.dapClick(300090101, {
        "searchWord": decodeURIComponent(word),
        "type": "3",
        "click": "1"
    });
}
/**
 * 清空搜索历史
 */
ec.search.deleteSearchHistory = function () {
    $.ajax({
        type: "post",
        url: '/search/clearUp.json?t=' + new Date().getTime(),
        dataType: "json",
        timeout: 10000,
        success: function (json) {
            if (json.success != undefined && !json.success) {
                //console.log('返回异常');
                return;
            }
        }
    });
};
/**
 * 热搜词展示
 */
ec.search.hotWord = function (flag, hisList, hisWordListLen) {
    var f = flag;
    var hisLst = hisList;
    var hisWLL = hisWordListLen;

    var hotWordListAll = ec.search.searchArr;
    var hotWordListSC = [];
    var hotWordListHW = [];
    var hotWordListRY = [];
    var hotWordList = [];
    for (var swal = 0; swal < hotWordListAll.length; swal++) {
        if (hotWordListAll[swal].inSearchBox == 1) {
            if (hotWordListAll[swal].type == 1) {
                hotWordListSC.push(hotWordListAll[swal]);
            } else if (hotWordListAll[swal].type == 2) {
                hotWordListHW.push(hotWordListAll[swal]);
            } else {
                hotWordListRY.push(hotWordListAll[swal]);
            }
        }
    }
    if (f == "searchWordSCList") {
        hotWordList = hotWordListSC;
    } else if (f == "searchWordHWList") {
        hotWordList = hotWordListHW;
    } else {
        hotWordList = hotWordListRY;
    }
    var html = [];
    var tag = false;
    var tip = 1;
    var recordLen = 10 - hisWordListLen;
    //热搜词展示
    if (hotWordList.length <= 2) {
        return;
    }
    for (var i = 2; i < hotWordList.length; i++) {
        // 取得热搜词
        var hotWord = hotWordList[i];
        // 计算热搜词的长度
        var hotWordLen = ec.getLength(hotWord.word);
        word = hotWord.word.transHtmlAttribute();
        tag = false;
        if (hisWordListLen != 0) {
            for (var k = 0; k < hisWordListLen; k++) {
                var hisWord = hisLst[k];
                if (word == hisWord.transHtmlAttribute()) {
                    tag = true;
                    break;
                }
            }
        }
        if (tip > recordLen) {
            break;
        }
        if (tag == false) {
            if (hotWord.isActivityWords == 1) {
                if (hotWord.activityUrl != null && hotWord.activityUrl != "") {
                    html.push('<li><a href="' + hotWord.activityUrl + '" target="_blank" onclick="pushHotSearchMsg(\'' + ec.encodeForJS(word) + '\')" data-value="' + encodeURIComponent(word) + '">');
                    tip = tip + 1;
                } else {
                    html.push('<li><a href="javascript:void(0);" target="_blank" onclick="searchFunc(\'' + ec.encodeForJS(word) + '\'); return false;" data-value="' + encodeURIComponent(word) + '">');
                    tip = tip + 1;
                }
            } else {
                html.push('<li><a href="javascript:void(0);" target="_blank" onclick="searchFunc(\'' + ec.encodeForJS(word) + '\'); return false;" data-value="' + encodeURIComponent(word) + '">');
                tip = tip + 1;
            }

            if (hotWordLen > searchHistoryMaxLength) {
                // 截取字符串
                html.push($("<div/>").text(ec.cutstr(word, searchHistoryMaxLength)).html());
            } else {
                html.push($("<div/>").text(word).html());
            }
            html.push('</a></li>');
        }
    }
    if (tip > 1) {
        // 设置值
        $("#search-key-list").html(html.join(""));
        // 显示值
        $("#search-key").show();
        if ($("#search-key").is(':visible') || $(".autocomplete").is(':visible')) {
            $("#search-bar-form").addClass("hover")
        } else {
            $("#search-bar-form").removeClass("hover")
        }
    }
}

/***************************************************
 * 刷新首页用户经验条
 ***************************************************/
//积分和积分级别对应关系
//V0------V1------V2------V3------V4------V5
//00-----100-----1000----5000----20000---50000+
ec.account.privilege_updateProgress = function (max, min, totalPoint, gradeCode) { ////console.log('max=' + max + ', min=' + min + ', totalPoint=' + totalPoint + ', gradeCode=' + gradeCode);
    if (max >= 0 && min >= 0 && totalPoint >= 0) {
        var v_high = max,
            v_low = min,
            v_curr = totalPoint,
            per = (v_curr - v_low) / (v_high - v_low), //比例
            _deg = 0; //度数
        if (parseInt(v_curr) >= parseInt(v_high)) {
            $(".canvas-left div").css({ "transform": "rotateZ(0deg)", "background": "#F05C20" });
            $(".canvas-right div").css({ "transform": "rotateZ(-39deg)" });
        } else {
            if (per > 0.5) {
                _deg = 280 * per - 320;
                $(".canvas-left div").css({ "transform": "rotateZ(0deg)" });
                $(".canvas-right div").css({ "transform": "rotateZ(" + _deg + "deg)" });
                if (per > 0.7) {
                    $(".canvas-left div").css({ "background": "#F05C20" });
                } else {
                    _deg = _deg + 180;
                    $(".canvas-left div").css({ "transform": "rotateZ(" + _deg + "deg)", "background": "-webkit-gradient(linear, 0 bottom, right 0, from(#F05C20), to(#F58555))" });
                    $(".canvas-right div").css({ "background": "-webkit-gradient(linear, 0 bottom, right 0, from(#F58555), to(#F05C20))" });
                }
            } else {
                if (per < 0.01 && per > 0) {
                    per = 0.01;
                }
                _deg = 265 * per - 125;
                $(".canvas-left div").css({ "transform": "rotateZ(" + _deg + "deg)", "background": "-webkit-gradient(linear, 0 bottom, 0 0, from(#F05C20), to(#F58555))" });
                $(".canvas-right div").css({ "transform": "rotateZ(-180deg)" });
            }
        }
    }

    var i = $("#user-vip-level-tips");
    if (gradeCode != null) {
        switch (gradeCode) {
            case 0:
                vipColor = "#999";
                i.attr("class", "icon-vip-level-0");
                break;
            case 1:
                vipColor = "#01abdf";
                i.attr("class", "icon-vip-level-1");
                break;
            case 2:
                vipColor = "#24ca43";
                i.attr("class", "icon-vip-level-2");
                break;
            case 3:
                vipColor = "#ffb710";
                i.attr("class", "icon-vip-level-3");
                break;
            case 4:
                vipColor = "#fc5d21";
                i.attr("class", "icon-vip-level-4");
                break;
            case 5:
                vipColor = "#fc3784";
                i.attr("class", "icon-vip-level-5");
                break;
            default:
                vipColor = "#999";
                i.attr("class", "icon-vip-level-0");
                break;
        }
    }
};

ec.account.privilege_updateProgressIndex = function (gradeCode) {
    var i = $("#user-vip-level-tips-index");
    if (gradeCode != null) {
        switch (gradeCode) {
            case 0:
                vipColor = "#999";
                i.attr("class", "user-level icon-vip-level-0");
                break;
            case 1:
                vipColor = "#01abdf";
                i.attr("class", "user-level icon-vip-level-1");
                break;
            case 2:
                vipColor = "#24ca43";
                i.attr("class", "user-level icon-vip-level-2");
                break;
            case 3:
                vipColor = "#ffb710";
                i.attr("class", "user-level icon-vip-level-3");
                break;
            case 4:
                vipColor = "#fc5d21";
                i.attr("class", "user-level icon-vip-level-4");
                break;
            case 5:
                vipColor = "#fc3784";
                i.attr("class", "user-level icon-vip-level-5");
                break;
            default:
                vipColor = "#999";
                i.attr("class", "user-level icon-vip-level-0");
                break;
        }
    }
};


/**
 * 处理数据上报的TID
 */
function getPtid() {

    var tid = ec.util.cookie.get("TID");
    if (tid && tid != null && tid != "") {
        return tid;
    }

    var deviceid = ec.util.cookie.get("deviceid");
    if (deviceid == null || deviceid == "" || deviceid == undefined) {
        var s = [];
        var h = "0123456789abcdef";
        for (var a = 0; a < 32; a++) {
            s[a] = h.substr(Math.floor(Math.random() * 16), 1);
        }
        s[14] = "4";
        s[19] = h.substr((s[19] & 3) | 8, 1);
        s[8] = s[13] = s[18] = s[23];
        deviceid = s.join("");

        ec.util.cookie.set("deviceid", deviceid, {
            "expires": 3650,
            "domain": "vmall.com"
        });
    }
    ec.util.cookie.set("TID", deviceid, {
        "expires": 3650,
        "domain": "vmall.com"
    });
    return deviceid;
};

/**
 * 处理数据上报的时间
 */
function getTime() {
    var date = new Date();
    var y = date.getFullYear();
    var m = date.getMonth() + 1;
    m = m < 10 ? ('0' + m) : m;
    var d = date.getDate();
    d = d < 10 ? ('0' + d) : d;
    var h = date.getHours();
    h = h < 10 ? ('0' + h) : h;
    var minute = date.getMinutes();
    var second = date.getSeconds();
    minute = minute < 10 ? ('0' + minute) : minute;
    second = second < 10 ? ('0' + second) : second;
    var time = "" + y + m + d + h + minute + second;
    return time;

}

/**
 * 防止脚本注入
 * @param str
 * @returns
 */
function safeStr(str) {
    if (str == null) {
        return;
    }
    return str.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, "&quot;").replace(/'/g, "&#039;");
}

/**
 *dap上报
 */
ec.account.dapPushMsg = function (key, value, type) {
    _paq.push(['setTrackerUrl', dapDomain + '/dap/report']);
    var orderCode = ((ec.order && ec.order.orderCode) ? ec.order.orderCode : "") + '';
    _paq.push(['setSiteId', "www.vmall.com"]);
    // 上报自定义数据
    if (type == "view") {
        getPtid();
        _paq.push(['setCustomVariable', 1, 'cid', (ec.util.cookie.get("cps_id") || ""), 'page']);
        _paq.push(['setCustomVariable', 2, 'direct', (ec.util.cookie.get("cps_dap_redirect") || ""), 'page']);
        _paq.push(['setCustomVariable', 4, 'wi', (ec.util.cookie.get("cps_wi") || ""), 'page']);
        _paq.push(["trackPageView"]);
        ec.code.addAnalytics({ hicloud: true });
        _paq.push(['trackPageView']);
    } else if (type == "click") {
        _paq.push(['setCustomVariable', 1, 'cid', (ec.util.cookie.get("cps_id") || ""), 'page']);
        _paq.push(['setCustomVariable', 2, 'direct', (ec.util.cookie.get("cps_dap_redirect") || ""), 'page']);
        _paq.push(['setCustomVariable', 3, 'orderid', orderCode, 'page']);
        _paq.push(['setCustomVariable', 4, 'wi', (ec.util.cookie.get("cps_wi") || ""), 'page']);
        // _paq.push(['setCustomVariable',1, 'uid', ((ec.util.cookie.get("uid") ? ec.util.cookie.get("uid") : "") || ""), 'visit']);
        // _paq.push(['setCustomVariable',10, 'uid', ((ec.util.cookie.get("uid") ? ec.util.cookie.get("uid") : "") || ""), 'visit']);


        _paq.push(["trackLink", key, "link", value]);
    }
    //清空dap上报标志
    ec.util.cookie.set("cps_dap_redirect", null, { expires: -1, domain: "vmall.com" });
    ec.load({ url: "https://res.vmallres.com/bi/hianalytics.js", type: "js", loadType: "lazy" });
}

$(function () {
    ec.account.dapPushMsg('', '', 'view'); // 页面加载上报
});

ec.openWindow = function (opt) {
    if ('string' === typeof (opt)) {
        opt = { url: opt };
    }
    opt = $.extend({
        url: '',
        name: '',
        features: '',
        replace: false
    }, opt);
    return window.open(opt.url, opt.name, opt.features, opt.replace);
}

ec.redirectTo = function (opt) {
    if ('string' === typeof (opt)) {
        opt = { url: opt };
    }
    opt = $.extend({
        url: '',
        win: window,
    }, opt);
    return opt.win.location.href = opt.url.transHtmlAttribute();
}

ec.dapClick = function (link, content) {
    var value = {
        // UID: ec.util.cookie.get("uid"),
        TID: getPtid(),
        TIME: getTime(),
        CONTENT: content
    };
    ec.account.dapPushMsg(link, value, "click");
    ec.code.addAnalytics({ hicloud: true });
    _paq.push(["trackLink", link, "link", value]);
}

ec.loadCsrfToken = function (c) {
    if ('function' === typeof c) c();
}
